<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>删除Trakt记录</title>
    <link href="/2025/02/11/%E5%88%A0%E9%99%A4trakt%E8%AE%B0%E5%BD%95/"/>
    <url>/2025/02/11/%E5%88%A0%E9%99%A4trakt%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>尝到粪作或者不小心“误入歧途”之后想删掉Trakt记录却找不到删除的方法，那就只能用用<a href="https://gist.github.com/hugoboos/68b830aec8e7cab65055">特殊办法</a>了</p><p>进入<code>https://trakt.tv/users/&#123;username&#125;/history</code></p><p>在控制台运行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"># 删除整季观看记录<br><span class="hljs-built_in">setInterval</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>  $(<span class="hljs-string">&quot;.posters .grid-item&quot;</span>).<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">var</span> $this = $(<span class="hljs-variable language_">this</span>);<br>    <span class="hljs-keyword">if</span>($this.<span class="hljs-title function_">data</span>(<span class="hljs-string">&quot;season-id&quot;</span>) == <span class="hljs-string">&quot;&#123;此处替换为剧集的season-id&#125;&quot;</span>)&#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Removing history for&quot;</span>, $this.<span class="hljs-title function_">data</span>(<span class="hljs-string">&quot;url&quot;</span>));<br>      <span class="hljs-title function_">historyRemove</span>($this, $this.<span class="hljs-title function_">data</span>(<span class="hljs-string">&quot;history-id&quot;</span>));<br>    &#125;<br>  &#125;)<br>  &#125;,<span class="hljs-number">10000</span>);<br></code></pre></td></tr></table></figure><p><code>season-id</code>从元素中就能找到，电影使用<code>movie-id</code>，或者使用<code>histor-id</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>Trakt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将C++ DLL打包进WinForm可执行文件中</title>
    <link href="/2021/08/21/C-%E4%B8%8EDLL/"/>
    <url>/2021/08/21/C-%E4%B8%8EDLL/</url>
    
    <content type="html"><![CDATA[<p>在做C#开发时碰到了调用C++ DLL的需求，在C#中使用DLL并不复杂，但当时比较麻烦的需求是要将整个WinForm项目打包成一个可执行的exe文件。</p><span id="more"></span><p>首先，在.Net开发环境中，DLL有两种，分别是托管DLL和非托管DLL。我们可以简单理解为，托管DLL就是在.Net环境生成的DLL文件，而非托管DLL是不在.Net环境生成的DLL文件。更详细的区别可以看<a href="https://www.cnblogs.com/mmbbflyer/p/7799928.html">这</a>。</p><h3 id="ILMerge"><a href="#ILMerge" class="headerlink" title="ILMerge"></a>ILMerge</h3><p>ILMerge是巨硬官方推出的，用于在生成项目时合并DLL到exe的工具，但很可惜，他只支持合并托管的DLL。</p><p>当时我先编译出了一个非托管的DLL，发现存在上述问题。我又改写编译了一个托管版的，虽然能够直接通过添加引用导入该DLL，也能够在方法查看器中看到其中的所有方法，但ILMerge仍然认为这是一个非托管DLL。</p><p>我觉得ILMerge不怎么好用，于是便开始寻找其他工具。</p><h3 id="Costura-Fody"><a href="#Costura-Fody" class="headerlink" title="Costura.Fody"></a>Costura.Fody</h3><p><a href="https://github.com/Fody/Costura">GitHub地址</a></p><p><a href="https://www.nuget.org/packages/Costura.Fody/.">Nuget地址</a></p><p>在Nuget安装Costura.Fody后，Fody会做为依赖一同被添加进来，我在VS2015环境下，使用最新版本会遇到兼容性错误，所以使用旧版本VS需要手动降级。</p><p>安装完需要手动添加配置文件</p><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/image-20210821201251800.png" alt="image-20210821201251800"></p><p>配置文件内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Weavers</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Costura</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">IncludeAssemblies</span>&gt;</span><br>        ...（此处填入托管DLL，名称参考引用）<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">IncludeAssemblies</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">Costura</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">Weavers</span>&gt;</span><br></code></pre></td></tr></table></figure><p>非托管DLL需要放到固定名称的文件夹中，且32位与64位需要分别放置，Costura.Fody会自动将这两个文件夹中的内容合并到exe中。</p><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/image-20210821201616376.png" alt="image-20210821201616376"></p>]]></content>
    
    
    
    <tags>
      
      <tag>C#</tag>
      
      <tag>C++</tag>
      
      <tag>开发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>伽罗瓦域</title>
    <link href="/2021/08/17/%E4%BC%BD%E7%BD%97%E7%93%A6%E5%9F%9F/"/>
    <url>/2021/08/17/%E4%BC%BD%E7%BD%97%E7%93%A6%E5%9F%9F/</url>
    
    <content type="html"><![CDATA[<p>依旧是<a href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzAwNDAxOTM5Mw==&amp;action=getalbum&amp;album_id=1337011624133312513&amp;scene=173&amp;from_msgid=2655966885&amp;from_itemidx=1&amp;count=3&amp;nolastread=1#wechat_redirect">网事如烟云</a>的密码学专栏中讲述的内容，这个专栏对于几种常见密码算法的介绍比较详细，我阅读了之后有了许多收获。</p><p>这篇文章将描述一下密码学中常用的有限域(伽罗瓦域)。</p><span id="more"></span><h3 id="域的概念"><a href="#域的概念" class="headerlink" title="域的概念"></a>域的概念</h3><p>首先，假设你有部分基础，即简单了解过群、环、域，那么你可以通过下方的简述快速复习一下相关的概念，如果没有基础，请寻找一些公开课，例如信安数学基础，学习一下群的相关内容再继续阅读。</p><h4 id="群-group"><a href="#群-group" class="headerlink" title="群(group)"></a>群(group)</h4><p><strong>群</strong>的概念可以理解为：一个集合以及定义在这个集合上的二元运算，满足群的四条公理，封闭性、结合性、单位元、反元素。</p><p><strong>交换群</strong>就是在满足群的”四公理“的基础上还满足交换律，通常把满足交换律的群称作<strong>阿贝尔群(Abelian Group)</strong>，如整数集合和加法运算，$(Z,+)$，是一个阿贝尔群。</p><h4 id="环-ring"><a href="#环-ring" class="headerlink" title="环(ring)"></a>环(ring)</h4><p><strong>环</strong>在阿贝尔群的基础上，添加一种二元运算乘法$\cdot$​​(虽叫乘法，但不同于初等代数的乘法)。一个代数结构是环$(R, +, \cdot)$​，</p><h4 id="域-field"><a href="#域-field" class="headerlink" title="域(field)"></a>域(field)</h4><p><strong>域</strong>在交换环的基础上，还增加了二元运算除法，要求元素(除零元以外)可以作除法运算，即<strong>每个非零的元素都要有乘法逆元</strong>。如有理数集合、实数集合、复数集合都是域。而显然，整数集合不是域，因为两个整数相除，有可能得到分数。</p><p><strong>有限域</strong>，顾名思义，就是该域中只包含有限个元素。有限域中元素的个数，称为有限域的阶。如果有限域的阶可以表示为$p^n$，其中，p 是素数，n 是正整数，那么该有限域通常被称为<strong>伽罗瓦域</strong>（Galois Field，GF），记为 $GF(p^n)$。</p><h3 id="有限域的计算"><a href="#有限域的计算" class="headerlink" title="有限域的计算"></a>有限域的计算</h3><p>一切有限域都有加法和乘法两种运算，并必须满足以下条件：</p><p>1．封闭性：若任意两元素 $a \cdot b \in GF(q)$，则有</p><script type="math/tex; mode=display">\begin{aligned}a + b \in GF(q) \\a \cdot b \in GF(q)\end{aligned}</script><p>2．结合律：若任意 $a , b , c \in GF(q)$​​，则有</p><script type="math/tex; mode=display">\begin{aligned}( a + b ) + c &= a + ( b + c ) \\( a \cdot b ) \cdot c &= a \cdot ( b \cdot c )\end{aligned}</script><p>3．交换律：若任意 $a , b \in GF(q)$​​，则有</p><script type="math/tex; mode=display">\begin{aligned}a + b  &= b + a \\a \cdot b &= b \cdot a\end{aligned}</script><p>4．有乘法恒等元 e 和加法恒等元 0 ，使任意元素 $a \in GF(q)$​​​都有：</p><script type="math/tex; mode=display">\begin{aligned}a + 0  &= a \\a \cdot e &= a\end{aligned}</script><p>5．任意元素 $a \in GF(q) $​​都有乘法逆元素 $a^{-1}$​​ 和加法负元素$-a$​​，使</p><script type="math/tex; mode=display">\begin{aligned}a + (-a)  &= 0 \\a \cdot a ^ {-1} &= e\end{aligned}</script><p>但$0^{-1}$无定义。</p><p>6．乘对加分配律：任意 $a , b , c \in GF(q)$​有</p><script type="math/tex; mode=display">a \cdot ( b + c ) = a \cdot b + a \cdot c</script><h3 id="GF-2-8-​域上的加法与乘法"><a href="#GF-2-8-​域上的加法与乘法" class="headerlink" title="$GF(2^8)$​域上的加法与乘法"></a>$GF(2^8)$​域上的加法与乘法</h3><h4 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h4><p>在伽罗华域中，加法是模2运算，也就是忽略进位的加法，等同于位运算中的异或。</p><h4 id="乘法"><a href="#乘法" class="headerlink" title="乘法"></a>乘法</h4><p>本原多项式 (primitive polynomial)是一种特殊的不可约多项式。当一个域上的本原多项式确定了，这个域上的运算也就确定了。本原多项式一般通过查表得知，同一个域往往有多个本原多项式。</p><p>AES加解密算法中，使用的不可约多项式(irreducible polynomial)为$P(x)=x^8 + x^4 + x^3 + x + 1$​，下面将基于该多项式讲述$GF(2^8)$​域上的乘法实现。</p><p>$GF(2^M)$上的乘法运算是基于多项式运算的，比如 $5 = 00000101b = ( 2^2 + 1)$，对应的多项式为 $x^2+1$​</p><script type="math/tex; mode=display">\begin{aligned}3*7 &= (x+1)(x^2+x+1) \\&= x^3 + x^2 + x + x^2 + x + 1 \\&= x^3 + (x^2 + x^2) + (x+x) + 1 \\&= x^3 + 1\end{aligned}</script><p>因为加法为模2运算，所以相同项相加为0，所以减法可以当成加法来计算。</p><p>在相乘得到的多项式结果中，如果x的次数大于7，就需要对多项式在GF域上关于本原多项式 $P(x)$​​​ 求余数，即$\mod P(x)$​</p><script type="math/tex; mode=display">\begin{aligned}129 * 5 &= (x^7+1)(x^2+1) \\&= x^9 + x^7 + x^2 + 1 \\&= (x^9 + x^7 + x^2 + 1) + (x*P(x)) \\&= (x^9 + x^7 + x^2 + 1) + (x^9 + x^5 + x^4 + x^2 + x) \\&= x^7 + x^5 + x^4 + x + 1 \\&=\text{10110011b} \\&=\text{0xB3} \\&= 179\end{aligned}</script>]]></content>
    
    
    
    <tags>
      
      <tag>密码学</tag>
      
      <tag>数学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ECC:椭圆曲线密码学</title>
    <link href="/2021/08/16/ECC-%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    <url>/2021/08/16/ECC-%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E5%AF%86%E7%A0%81%E5%AD%A6/</url>
    
    <content type="html"><![CDATA[<p>​    在阅读了<a href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzAwNDAxOTM5Mw==&amp;action=getalbum&amp;album_id=1337011624133312513&amp;scene=173&amp;from_msgid=2655966885&amp;from_itemidx=1&amp;count=3&amp;nolastread=1#wechat_redirect">网事如烟云</a>的密码学专栏后，想要做个md版的留档。</p><span id="more"></span><p>​    椭圆曲线密码学（Elliptic curve cryptography，ECC），是一种公钥密码学机制。公钥密码学，都是建立在数学“难题”的基础上，ECC 的数学难题是类似因式分解或者求解离散对数这样的问题。</p><h3 id="椭圆曲线概念"><a href="#椭圆曲线概念" class="headerlink" title="椭圆曲线概念"></a>椭圆曲线概念</h3><p>​    椭圆是曲线，椭圆曲线却不是椭圆，如图1所示。 </p><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/image-20210816140006457.png" alt="椭圆与椭圆曲线"></p><p>​    图1-A 是椭圆，而图1-B、图1-C 是椭圆曲线。从形状上来看，两者相差巨大，而且从函数解析式的角度来看，两者也是相差巨大。</p><p>​    椭圆（Ellipse）的解析式为：</p><script type="math/tex; mode=display">\frac{ x ^ 2}{ a } + \frac{y ^ 2}{ b } = 1 \qquad ------ (1)</script><p>​    椭圆曲线（Elliptic Curve）的解析式为：</p><script type="math/tex; mode=display">{ y ^ 2 } + { a _ 1 } x y + { a _ 3 } y = {x ^ 3} +  { a _ 2 } { x ^ 2 } + { a _ 4 } x + { a _ 6 } \qquad ------ (2)</script><p>但是，为什么要将解析式(2)命名为椭圆曲线呢？这确实与椭圆有点关系，不过这个话题如果展开的话，那又是一个长篇大论，而且与本文主题无关。这里我们只须简单了解，在计算椭圆积分时，出现了形似(2)的解析式，所以将该方程式命名为“椭圆曲线”。</p><p>椭圆曲线更精确的定义，是指满足解析式(2)的所有点的集合，同时这些点必须是非奇异的（也就是光滑的）。</p><p>椭圆曲线密码学（Elliptic curve cryptography，ECC）所涉及的椭圆曲线，其形式更简单一些：</p><script type="math/tex; mode=display">{ y ^ 2 } = {x ^ 3} + { a _ 4 } x + { a _ 6 } \qquad ------ (3)</script><p>或者更清晰地表达为：</p><script type="math/tex; mode=display">{ y ^ 2 } = {x ^ 3} + { a } x + { b } \qquad ------ (4)</script><p>同时，由于椭圆曲线必须是光滑的，这个与三次方程的判别式等价。对于方程：</p><script type="math/tex; mode=display">{ 0 } = {x ^ 3} + { a } x + { b } \qquad ------ (5)</script><p>其判别式为：</p><script type="math/tex; mode=display">\Delta = 4 { a ^ 3 } + 27 { b ^ 2 }</script><p>如果椭圆曲线(4)光滑，则必须 ∆ != 0，也就是说，</p><script type="math/tex; mode=display">4 { a ^ 3 } + 27 { b ^ 2 } \ne 0</script><p>如果不满足此条件，则相应的曲线就不光滑，从而也就不是椭圆曲线，如图2所示。</p><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/image-20210816142754558.png" alt="非光滑的曲线"></p><p>另外，椭圆曲线的定义，还包括一个无穷远点（∞）——也记为零点O（大写的“O”），这也可以想象。对于${ y ^ 2 } = {x ^ 3} + { a } x + { b }$，我们有：</p><script type="math/tex; mode=display">y = ( {x^3} + ax + b)^{1/2}</script><p>显然，x 为无穷大时，y 也为无穷大，虽然这种表述在数学上是不严谨的。不过 O 在 ECC 的加法定义中起到了举足轻重的作用，这一点我们会在后面的内容中看到。</p><p>总之，ECC 所涉及的椭圆曲线，其含义为：</p><p>（1）满足如下条件的曲线上所有的点：${ y ^ 2 } = {x ^ 3} + { a } x + { b }$，$4 { a ^ 3 } + 27 { b ^ 2 } \ne0$</p><p>（2）再加上一个 O 点</p><p>最后，需要强调的是，虽然，${ y ^ 2 } = {x ^ 3} + { a } x + { b }$是一个 X 轴对称的函数。但是，这只是 ECC 所采用的椭圆函数解析式，并不是说所有的椭圆曲线都是 X 轴对称的，如图3所示。</p><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/image-20210816143311509.png" alt="非X轴对称的椭圆曲线"></p><p>我们只须意识到图3是一个非 X 轴对称的图形即可，其他的也不必太多关注，毕竟我们关心的是 ECC 所采取的椭圆曲线：${ y ^ 2 } = {x ^ 3} + { a } x + { b }$，而它正好是 X 轴对称函数。为什么如此强调 X 轴对称呢？这与 ECC 所定义的加法运算有关。</p><h3 id="ECC-的加法及阿贝尔群"><a href="#ECC-的加法及阿贝尔群" class="headerlink" title="ECC 的加法及阿贝尔群"></a>ECC 的加法及阿贝尔群</h3><p>ECC 关于加法的定义，就是针对阿贝尔群的——使它的加法运算，满足阿贝尔群的要求。所以，ECC 需要首先定义加法单位元。ECC 定义其椭圆曲线中的元素 O（无穷远点），就是加法单位元。这也就意味着，</p><script type="math/tex; mode=display">O = - O</script><p>同时，ECC 定义其集合中的元素就是其椭圆曲线上的点（当然也包括 O），如图4所示。</p><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/image-20210816143723406.png" alt="ECC加法中的元素"></p><p>图4中，椭圆曲线${ y ^ 2 } = {x ^ 3} + { a } x + { b }$（记为 E(a, b)，或者简记为 E）上点 P，就是 ECC 加法中的元素。</p><p>考虑到加法单位元，显然有，</p><script type="math/tex; mode=display">P + O = P</script><p>ECC 中关于点 P 的负元的定义是：P 关于 X 轴的对称点，即假设 P 的坐标为(x, y)，那么 P 的负元 Q 的坐标为(x, -y)，如图5所示。</p><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/image-20210816143858840.png" alt="ECC加法中的负元"></p><p>图5中，Q 是 P 的负元，也即，</p><script type="math/tex; mode=display">Q = - P</script><p>根据加法单位元的定义，显然有，</p><script type="math/tex; mode=display">P + Q = P + (-P) = O</script><p>有了这些铺垫以后，就可以定义 ECC 的加法了，如图6所示。</p><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/image-20210816144013139.png" alt="ECC 加法定义示意"></p><p>图6中，选取椭圆曲线 E(a, b)上的两点 P、Q，做一条直线（记为 L），L 与 E 相交于点 R’，做点 R’的 X 轴对称点 R，则 ECC 关于加法的定义为：</p><script type="math/tex; mode=display">R' = -R \\R + R' = O</script><p>所以，</p><script type="math/tex; mode=display">P + Q + R' = O</script><p>也就是说，一根直线与 ECC 的椭圆曲线相交于3个点，则3个点之和为 O。</p><p>我们再考虑一种特殊情形，如图7所示。</p><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/image-20210816150354025.png" alt="直线与椭圆曲线相切"></p><p>图7与图6相比，没有本质区别，只不过直线 L 与椭圆曲线 E(a, b) 相切而已。根据 ECC 加法的定义，我们有：</p><script type="math/tex; mode=display">P + P = 2 P = R</script><p>另外，为了满足阿贝尔群的定义，ECC 加法还定义了结合律和交换律：</p><script type="math/tex; mode=display">A + B + C = A + (B + C)    ----结合律 \\A + B = B + A    ----交换律</script><p>至此，ECC 关于加法的定义，就完全满足阿贝尔群的定义。</p><h3 id="ECC在GF-p-上的计算"><a href="#ECC在GF-p-上的计算" class="headerlink" title="ECC在GF(p)上的计算"></a>ECC在GF(p)上的计算</h3><p>可以想象，椭圆曲线最终要跟伽罗瓦域挂钩，才能构建出 ECC 大厦。伽罗瓦域分为 $GF(p)$​ 和 $GF(p^n)$​，ECC 涉及到了$ GF(p)$​ 和 $GF(2^n)$​。此处先介绍椭圆曲线在 $GF(p)$​​ 上的计算。</p><p>ECC 在 $GF(p)$ 上的计算，所采用的椭圆曲线方程需要做一个小小的变换，为：</p><script type="math/tex; mode=display">{y^2} \mod p = ( {x^3} + ax + b ) \mod p</script><p>同时，</p><script type="math/tex; mode=display">( 4 { a ^ 3 } + 27 { b ^ 2 } ) \mod p \ne 0</script><p>其中，x,y,a,b 的取值都属于集合${Z_p} = { 0, 1, \dots, p-1 }$，并且p是素数。这样的椭圆曲线也称为素曲线（prime curve），并记为${ E_p } (a, b)$</p><p>我们来看一个具体的例子，假设 $p = 23，a = 1， b = 1$，即：</p><script type="math/tex; mode=display">{y ^ 2} \mod 23 = ( {x^3} + x + 1 ) \mod 23</script><p>如果 x 从0取值到22，则 y 的取值如表1所示。</p><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/image-20210816151419932.png" alt="image-20210816151419932"></p><p>表1的计算，需要说明一下。我们以 $x = 7$ 为例，进行说明。</p><p>(1)计算$ f(7)={x^3}+ x + 1 = { 7  ^ 3 } + 7 + 1 = 351$</p><p>(2)计算$f(7) \mod 23 = 351 \mod 23 = 6$​​</p><p>(3)所以，${y^2} \mod 23 = 6$</p><p>(4)计算出，${y^2} = 121$</p><p>(5)计算出，${y_1} = 11,{y_2}=-11$</p><p>(6)计算，${y_2}={y_2} \mod 23 = (-11) \mod 23 = 12$</p><p>(7)所以，$(x,y)$的值为：$(7,11),(7,12)$</p><p>同理，根据这样的计算方法，我们发现$ x \in { 0,1,3,4,5,6,7,9,11,12,13,17,18,19 }$时，可以计算出y值，而$x \in {2,8,10,14,15,16,20,21,22}$​时，则没有合适的值，如表2所示。</p><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/image-20210816152257567.png" alt="image-20210816152257567"></p><p>需要强调的是，按照椭圆曲线的定义，无论是表1还是表2，都还缺少一个无穷远点（O）。</p><p>我们将表2中的点(x, y)，画在平面直角坐标系中，如图1所示。 </p><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/image-20210816152330339.png" alt="image-20210816152330339"></p><p>仔细观察图1中的点，它们是关于 $y = 11.5 $这条线轴对称。这是因为如果 y 等于负数的话，则将$ y \mod 23$，相当于 $y = y + 23$。因为图形原本是关于$ y = 0$ 对称，所以现在是关于$ y = 11.5 $对称。</p><p>不过，这并不是重点。现在有一个非常关键的问题，椭圆曲线对一个素数 p 取模后，它原来的加法定义还能适用吗？我们先回归一下未取模之前的椭圆曲线的加法定义，如图2所示。</p><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/image-20210816152450571.png" alt="image-20210816152450571"></p><p>图2中，$R = P + Q$。我们假设 P、Q、R 的坐标分别为：$(x_P,y_P)、(x_Q,y_Q)、(x_R,y_R)$​。</p><p>则直线 PQ 的方程为：</p><script type="math/tex; mode=display">y = [(y_Q - y_P)/(x_Q - x_P)]x + [(x_Q - x_P)y_Q - (y_Q - y_P)x_Q]</script><p>此方程与椭圆曲线方程$（y^2 = x^3 + ax + b）$联合可解得：</p><script type="math/tex; mode=display">\begin{aligned}{ x_R } &= { \lambda ^ 2 + x_P + x_Q } \\{ y_R } &= { -y_P + \lambda(x_P - x _R)}\end{aligned}</script><p>其中，</p><script type="math/tex; mode=display">\lambda = (y_Q - y_P)/(x_Q - x_P)</script><p>现在椭圆曲线对素数p取模后，ECC 的加法该如何定义呢？总的来说，其定义的精髓未变，只是叠加上取模运算而已。</p><p>（1）加法单位元，仍然是无穷远点 O</p><script type="math/tex; mode=display">P + O = P \\O = -O</script><p>（2）元素 P 的负元的基本定义未变，只是最后取值时，需要对素数 p 取模。</p><p>假设 P 的坐标为$(x_P, y_P)$，那么 P 的负元为 $-P（P + (-P) = 0）$，-P 的坐标为$(x_P,-y_P)$。但是，$-y_P$ 对 p 取模后，就变为 $p - y_P$。也就是说，-P 的坐标为$(x_P,p - y_P)$。</p><p>比如，p = 23，P = (13, 7)，那么 -P = (13, 16)。</p><p>（3）重点来了，加法的定义。假设$ R = P + Q$，同时假设 P、Q、R 的坐标分别为：$(x_P,y_P)、(x_Q,y_Q)、(x_R,y_R)$，并且 P != -Q，那么</p><script type="math/tex; mode=display">\begin{aligned}{ x _ R } = ( \lambda ^ 2 - x_P - x_Q) \mod p \\ { y_R } = (-y_P + \lambda(x_P - x_R)) \mod p\end{aligned}</script><p>其中，</p><script type="math/tex; mode=display">\begin{aligned}\lambda &= [(y_Q - y_P)/(x_Q - x_P)] \mod p, if \quad P \ne Q \\\lambda &= [(3{x_P}^2 + a)/(2y_P)] \mod p, if \quad P = Q\end{aligned}</script><p>（4）乘法定义为重复相加，比如 nP = P + … + P（n 个 P 相加）。注意，这重复相加的背后，仍然存在对 p 的取模运算。</p><p>需要强调的是，以上的定义（3）中，计算λ时涉及到了 GF(p) 的乘法逆元，我们举一个例子。假设：P = (3,10)，Q = (9,7)，p = 23，那么</p><script type="math/tex; mode=display">\begin{aligned}\lambda &= [(y_Q - y_P)/(x_Q - x_P)] \mod p \\&= [(7 - 10)/(9 - 3)] \mod 23 \\&= [-3/6] \mod 23 \\&= 11\end{aligned}</script>]]></content>
    
    
    
    <tags>
      
      <tag>密码学</tag>
      
      <tag>ECC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nginx基础</title>
    <link href="/2021/07/24/nginx%E5%9F%BA%E7%A1%80/"/>
    <url>/2021/07/24/nginx%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="1-安装哪个版本？"><a href="#1-安装哪个版本？" class="headerlink" title="1.安装哪个版本？"></a>1.安装哪个版本？</h2><p>nginx、openresty、tengine是三大主流，当然还有一些小众的定制，例如VeryNginx(基于openresty)，他们各有优点，但从开箱即用上来说，openresty默认带的模块最多，而且内置了lua-nginx-module以及一些lua模块，免去了给nginx添加模块的烦恼。</p><span id="more"></span><h4 id="为已安装好的nginx添加模块"><a href="#为已安装好的nginx添加模块" class="headerlink" title="为已安装好的nginx添加模块"></a>为已安装好的nginx添加模块</h4><p>手动安装的nginx需要在源码包手动configue以及make，在使用时可能会有额外的需求，这时可以重新编译一份nginx</p><p><strong>这里以添加ssl模块为例</strong></p><p>切换到源码包path：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/local/software/nginx-1.18.0/<br></code></pre></td></tr></table></figure><p>查看nginx原有的模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/usr/local/nginx/sbin/nginx -V<br></code></pre></td></tr></table></figure><p>在configure arguments:后面显示的原有的configure参数如下：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">--prefix=/usr/<span class="hljs-keyword">local</span>/nginx --<span class="hljs-keyword">with</span>-http_gzip_static_module<br></code></pre></td></tr></table></figure><p>那么我们的新配置信息就应该这样写：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module<br></code></pre></td></tr></table></figure><p>运行上面的命令即可，等配置完</p><p>配置完成后，运行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">make<br></code></pre></td></tr></table></figure><p>这里不要接着进行make install，否则就会覆盖安装了</p><p>然后备份原有已安装好的nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.bak<br></code></pre></td></tr></table></figure><p>然后将刚刚编译好的nginx覆盖掉原有的nginx（这个时候nginx要是停止状态）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> ./objs/nginx /usr/local/nginx/sbin/<br></code></pre></td></tr></table></figure><p>然后可以通过命令查看是否已经加入成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/usr/local/nginx/sbin/nginx -V　<br></code></pre></td></tr></table></figure><h2 id="2-配置文件"><a href="#2-配置文件" class="headerlink" title="2.配置文件"></a>2.配置文件</h2><h3 id="nginx-conf"><a href="#nginx-conf" class="headerlink" title="nginx.conf"></a>nginx.conf</h3><h4 id="main-全局模块"><a href="#main-全局模块" class="headerlink" title="main(全局模块)"></a>main(全局模块)</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># 指定用户</span><br><span class="hljs-comment">#user  nobody; </span><br><span class="hljs-comment"># 指定进程数，一般为核心数的两倍</span><br><span class="hljs-attribute">worker_processes</span>  <span class="hljs-number">1</span>; <br><span class="hljs-comment"># 日志记录</span><br><span class="hljs-comment">#error_log  logs/error.log;</span><br><span class="hljs-comment">#error_log  logs/error.log  notice;</span><br><span class="hljs-comment">#error_log  logs/error.log  info;</span><br><span class="hljs-comment"># 进程ID</span><br><span class="hljs-comment">#pid        logs/nginx.pid;</span><br></code></pre></td></tr></table></figure><h4 id="events-nginx工作模式"><a href="#events-nginx工作模式" class="headerlink" title="events(nginx工作模式)"></a>events(nginx工作模式)</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">events</span> &#123;<br><span class="hljs-comment"># 指定运行模型</span><br><span class="hljs-attribute">use</span> <span class="hljs-literal">epoll</span>;<br>    <span class="hljs-attribute">worker_connections</span>  <span class="hljs-number">1024</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="http-http设置"><a href="#http-http设置" class="headerlink" title="http(http设置)"></a>http(http设置)</h4><p>upstream(负载均衡服务器设置)</p><p>server(主机设置)</p><p>location(url 匹配)</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">http</span> &#123;<br><span class="hljs-comment"># include：来设定文件的mime类型(MIME (Multipurpose Internet Mail Extensions) 是描述消息内容类型的因特网标准。)，类型在配设置文件目录下的mime.type文件定义，来告诉nginx来识别文件类型</span><br>    <span class="hljs-attribute">include</span>       mime.types;<br>    <br>    <span class="hljs-comment"># default_type：设定了默认的类型问二进制流，也就是当文件类型未定义时使用这种方式，例如在没有配置asp的locate环境时，nginx是不予解析的，此时，用浏览器访问asp文件就会出现下载了</span><br>    <span class="hljs-attribute">default_type</span>  application/octet-stream;<br><br><span class="hljs-comment"># log_format：用于设置日志的格式，和记录哪些参数，这里设置为main，刚好用于access_log来记录这种类型</span><br>    <span class="hljs-comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br>    <span class="hljs-comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br>    <span class="hljs-comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><br><span class="hljs-comment"># 上传下载文件功能</span><br><span class="hljs-attribute">sendfile</span>        <span class="hljs-literal">on</span>;<br>    <span class="hljs-comment">#tcp_nopush     on;</span><br><br><span class="hljs-comment"># 超时时间</span><br>    <span class="hljs-comment">#keepalive_timeout  0;</span><br>    <span class="hljs-attribute">keepalive_timeout</span>  <span class="hljs-number">65</span>;<br><br>    <span class="hljs-comment">#gzip  on;</span><br>    <br>    <span class="hljs-comment"># server模块</span><br>    <span class="hljs-section">server</span> &#123;<br>    <span class="hljs-comment"># 监听端口</span><br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span>;<br>      <span class="hljs-comment"># 虚拟主机名</span><br>      <span class="hljs-attribute">server_name</span>  localhost;<br><br>        <span class="hljs-comment">#charset koi8-r;</span><br><br>        <span class="hljs-comment">#access_log  logs/host.access.log  main;</span><br><br>        <span class="hljs-section">location</span> / &#123;<br>        <span class="hljs-comment"># root path</span><br>            <span class="hljs-attribute">root</span>   html;<br>            <span class="hljs-comment"># 默认文档，如果您指定了多个文件，那么将按照您指定的顺序逐个查找，可以在列表末尾加上一个绝对路径名的文件。</span><br>            <span class="hljs-attribute">index</span>  index.html index.htm;<br>        &#125;<br><br>        <span class="hljs-comment">#error_page  404              /404.html;</span><br><br>        <span class="hljs-comment"># redirect server error pages to the static page /50x.html</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-attribute">error_page</span>   <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span>  /50x.html;<br>        <span class="hljs-section">location</span> = /50x.html &#123;<br>            <span class="hljs-attribute">root</span>   html;<br>        &#125;<br><br>        <span class="hljs-comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ \.php$ &#123;</span><br>        <span class="hljs-comment">#    proxy_pass   http://127.0.0.1;</span><br>        <span class="hljs-comment">#&#125;</span><br><br>        <span class="hljs-comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ \.php$ &#123;</span><br>        <span class="hljs-comment">#    root           html;</span><br>        <span class="hljs-comment">#    fastcgi_pass   127.0.0.1:9000;</span><br>        <span class="hljs-comment">#    fastcgi_index  index.php;</span><br>        <span class="hljs-comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br>        <span class="hljs-comment">#    include        fastcgi_params;</span><br>        <span class="hljs-comment">#&#125;</span><br><br>        <span class="hljs-comment"># deny access to .htaccess files, if Apache&#x27;s document root</span><br>        <span class="hljs-comment"># concurs with nginx&#x27;s one</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ /\.ht &#123;</span><br>        <span class="hljs-comment">#    deny  all;</span><br>        <span class="hljs-comment">#&#125;</span><br>    &#125;<br><br><br>    <span class="hljs-comment"># another virtual host using mix of IP-, name-, and port-based configuration</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment">#server &#123;</span><br>    <span class="hljs-comment">#    listen       8000;</span><br>    <span class="hljs-comment">#    listen       somename:8080;</span><br>    <span class="hljs-comment">#    server_name  somename  alias  another.alias;</span><br><br>    <span class="hljs-comment">#    location / &#123;</span><br>    <span class="hljs-comment">#        root   html;</span><br>    <span class="hljs-comment">#        index  index.html index.htm;</span><br>    <span class="hljs-comment">#    &#125;</span><br>    <span class="hljs-comment">#&#125;</span><br><br><br>    <span class="hljs-comment"># HTTPS server</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment">#server &#123;</span><br>    <span class="hljs-comment">#    listen       443 ssl;</span><br>    <span class="hljs-comment">#    server_name  localhost;</span><br><br>    <span class="hljs-comment">#    ssl_certificate      cert.pem;</span><br>    <span class="hljs-comment">#    ssl_certificate_key  cert.key;</span><br><br>    <span class="hljs-comment">#    ssl_session_cache    shared:SSL:1m;</span><br>    <span class="hljs-comment">#    ssl_session_timeout  5m;</span><br><br>    <span class="hljs-comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br>    <span class="hljs-comment">#    ssl_prefer_server_ciphers  on;</span><br><br>    <span class="hljs-comment">#    location / &#123;</span><br>    <span class="hljs-comment">#        root   html;</span><br>    <span class="hljs-comment">#        index  index.html index.htm;</span><br>    <span class="hljs-comment">#    &#125;</span><br>    <span class="hljs-comment">#&#125;</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="3-负载均衡"><a href="#3-负载均衡" class="headerlink" title="3.负载均衡"></a>3.负载均衡</h2><h3 id="轮询"><a href="#轮询" class="headerlink" title="轮询"></a>轮询</h3><p>通过统计判断实现负载均衡</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">upstream</span> fuzaijunheng &#123;<br><span class="hljs-attribute">server</span> <span class="hljs-number">127.0.0.1:1001</span>;<br><span class="hljs-attribute">server</span> <span class="hljs-number">127.0.0.1:1002</span>;<br>.....<br>&#125;<br></code></pre></td></tr></table></figure><p>修改<code>location</code>内容</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">location</span> / &#123;<br>            <span class="hljs-attribute">proxy_pass</span> http://fuzaijunheng;<br>            <span class="hljs-comment">#root   html;</span><br>            <span class="hljs-comment">#index  index.html index.htm;</span><br>        &#125;<br></code></pre></td></tr></table></figure><h3 id="权重"><a href="#权重" class="headerlink" title="权重"></a>权重</h3><p>权重值越大，优先级越高，按照百分比实现负载均衡</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">upstream</span> fuzaijunheng&#123;<br>        <span class="hljs-attribute">server</span> <span class="hljs-number">47.102.145.80:8080</span> weight=<span class="hljs-number">10</span>;<br>        <span class="hljs-attribute">server</span> <span class="hljs-number">47.114.72.89:8070</span> weight=<span class="hljs-number">5</span>;<br>    &#125;<br><br>    <span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>        <span class="hljs-attribute">server_name</span> test;<br>        <span class="hljs-section">location</span> / &#123;<br>            <span class="hljs-attribute">proxy_pass</span> http://fuzaijunheng;<br>            <span class="hljs-attribute">proxy_redirect</span> default;<br>             <span class="hljs-comment">#这里配置宕机检测，都设置为1秒，这是有了负载均衡过后配置的，如果访问时挂了一个服务器，1秒不响应就自动切换到另外应用服务器进行访问</span><br>            <span class="hljs-attribute">proxy_connect_timeout</span> <span class="hljs-number">1</span>;<br>            <span class="hljs-attribute">proxy_send_timeout</span> <span class="hljs-number">1</span>;<br>            <span class="hljs-attribute">proxy_read_timeout</span> <span class="hljs-number">1</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="iphash"><a href="#iphash" class="headerlink" title="iphash"></a>iphash</h3><p>根据访问者ip地址的hash来分配服务器</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">upstream ~ &#123;<br>ip_hash;<br><span class="hljs-built_in">server </span>127.0.0.1:1001 <span class="hljs-attribute">weight</span>=1;<br><span class="hljs-built_in">server </span>127.0.0.1:1002 <span class="hljs-attribute">weight</span>=2;<br><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span>.<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="最少连接"><a href="#最少连接" class="headerlink" title="最少连接"></a>最少连接</h3><p>将请求分配到连接最少的服务器上,理论上绝对平衡</p><figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs roboconf">upstream ~ &#123;<br><span class="hljs-attribute">least_conn;</span><br><span class="hljs-attribute">server 127.0.0.1</span>:1001;<br><span class="hljs-attribute">server 127.0.0.1</span>:1002;<br>.....<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="fair"><a href="#fair" class="headerlink" title="fair"></a>fair</h3><p>按后端服务器的响应时间来分配请求，响应时间短的优先分配。需要插件来实现</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">upstream ~ &#123;<br><span class="hljs-built_in">server </span>127.0.0.1:1001 <span class="hljs-attribute">weight</span>=1;<br><span class="hljs-built_in">server </span>127.0.0.1:1002 <span class="hljs-attribute">weight</span>=2;<br>fair;<br><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span>.<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>以轮询为例</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">worker_processes</span>  <span class="hljs-number">1</span>;<br><br><span class="hljs-section">events</span> &#123;<br>    <span class="hljs-attribute">worker_connections</span>  <span class="hljs-number">1024</span>;<br>&#125;<br><br><br><span class="hljs-section">http</span> &#123;<br>        <span class="hljs-section">upstream</span> fuzaijunheng&#123;<br>        <span class="hljs-comment"># 以本地Tomcat为例</span><br>        <span class="hljs-attribute">server</span> localhost:<span class="hljs-number">8080</span>;<br>        <span class="hljs-attribute">server</span> localhost:<span class="hljs-number">8081</span>;<br>    &#125;<br><br>    <span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span>;<br>        <span class="hljs-attribute">server_name</span>  localhost;<br><br>        <span class="hljs-section">location</span> / &#123;<br>            <span class="hljs-attribute">proxy_pass</span> http://fuzaijunheng;<br>            <span class="hljs-attribute">proxy_redirect</span> default;<br>        &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="4-限流"><a href="#4-限流" class="headerlink" title="4.限流"></a>4.限流</h2><h3 id="令牌桶算法"><a href="#令牌桶算法" class="headerlink" title="令牌桶算法"></a>令牌桶算法</h3><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/image-20210302091716077.png" alt="image-20210302091716077"></p><ul><li>令牌以固定速率产生，并缓存到令牌桶中</li><li>令牌桶放满时，多余的令牌被丢弃</li><li>请求要消耗等比例的令牌才能被处理</li><li>令牌不够时，请求被缓存</li></ul><h3 id="漏桶算法"><a href="#漏桶算法" class="headerlink" title="漏桶算法"></a>漏桶算法</h3><ul><li>请求存放在漏桶中，以固定速率流出</li><li>漏桶满后，多余请求将被丢弃</li></ul><h3 id="中文文档已过时"><a href="#中文文档已过时" class="headerlink" title="中文文档已过时"></a>中文文档已过时</h3><h4 id="配置示例（过时）"><a href="#配置示例（过时）" class="headerlink" title="配置示例（过时）"></a>配置示例（过时）</h4><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ada">http &#123;<br>: <span class="hljs-type">limit_zone</span>   one  $binary_remote_addr  <span class="hljs-number">10</span>m;<br><br>: ...<br><br>: <span class="hljs-type">server</span> &#123;<br><br>: ...<br><br>: <span class="hljs-type">location</span> /download/ &#123;<br>: <span class="hljs-type">limit_conn</span>   one  <span class="hljs-number">1</span>;<br>: &#125;<br></code></pre></td></tr></table></figure><h4 id="limit-zone-过时"><a href="#limit-zone-过时" class="headerlink" title="limit_zone(过时)"></a>limit_zone(过时)</h4><p><strong>语法：</strong> <em>limit_zone zone_name $variable the_size</em></p><p><strong>默认值：</strong> <em>no</em></p><p><strong>作用域：</strong> <em>http</em></p><p>本指令定义了一个数据区，里面记录会话状态信息。<br>$variable 定义判断会话的变量；the_size 定义记录区的总容量。</p><p>例子：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">limit_zone</span>   one  <span class="hljs-variable">$binary_remote_addr</span>  <span class="hljs-number">10m</span>;<br></code></pre></td></tr></table></figure><p>定义一个叫“one”的记录区，总容量为 10M，以变量 $binary_remote_addr 作为会话的判断基准（即一个地址一个会话）。</p><p>您可以注意到了，在这里使用的是 $binary_remote_addr 而不是 $remote_addr。</p><p>$remote_addr 的长度为 7 至 15 bytes，会话信息的长度为 32 或 64 bytes。 而 $binary_remote_addr 的长度为 4 bytes，会话信息的长度为 32 bytes。</p><p>当区的大小为 1M 的时候，大约可以记录 32000 个会话信息（一个会话占用 32 bytes）。</p><h4 id="limit-conn（过时）"><a href="#limit-conn（过时）" class="headerlink" title="limit_conn（过时）"></a>limit_conn（过时）</h4><p><strong>语法：</strong> <em>limit_conn zone_name the_size</em></p><p><strong>默认值：</strong> <em>no</em></p><p><strong>作用域：</strong> <em>http, server, location</em></p><p>指定一个会话最大的并发连接数。 当超过指定的最发并发连接数时，服务器将返回 “Service unavailable” (503)。</p><p>例子：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">limit_zone</span>   one  <span class="hljs-variable">$binary_remote_addr</span>  <span class="hljs-number">10m</span>;<br><br><span class="hljs-section">server</span> &#123;<br><span class="hljs-section">location</span> /download/ &#123;<br><span class="hljs-attribute">limit_conn</span>   one  <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>定义一个叫“one”的记录区，总容量为 10M，以变量 $binary_remote_addr 作为会话的判断基准（即一个地址一个会话）。 限制 /download/ 目录下，一个会话只能进行一个连接。 简单点，就是限制 /download/ 目录下，一个IP只能发起一个连接，多过一个，一律503。</p><h3 id="英文文档"><a href="#英文文档" class="headerlink" title="英文文档"></a><a href="http://nginx.org/en/docs/">英文文档</a></h3><h4 id="limit-req-module"><a href="#limit-req-module" class="headerlink" title="limit req module"></a>limit req module</h4><h5 id="Example-Configuration"><a href="#Example-Configuration" class="headerlink" title="Example Configuration"></a>Example Configuration</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs routeros">http &#123;<br>    limit_req_zone <span class="hljs-variable">$binary_remote_addr</span> <span class="hljs-attribute">zone</span>=one:10m <span class="hljs-attribute">rate</span>=1r/s;<br><br>    <span class="hljs-built_in">..</span>.<br><br>   <span class="hljs-built_in"> server </span>&#123;<br><br>        <span class="hljs-built_in">..</span>.<br><br>        location /search/ &#123;<br>            limit_req <span class="hljs-attribute">zone</span>=one <span class="hljs-attribute">burst</span>=5;<br>        &#125;<br></code></pre></td></tr></table></figure><p>rate设置产生令牌的速率，burst设置缓冲大小</p><p>不过，单独使用 <strong>burst</strong> 参数并不实用。假设 <strong>burst=50</strong> ，rate依然为10r/s，排队中的50个请求虽然每100ms会处理一个，但第50个请求却需要等待 50 * 100ms即 5s，这么长的处理时间自然难以接受。</p><p>因此，<strong>burst</strong> 往往结合 <strong>nodelay</strong> 一起使用。</p><p><strong>nodelay</strong> 针对的是 burst 参数，<strong>burst=20 nodelay</strong> 表示这20个请求立马处理，不能延迟，相当于特事特办。不过，即使这20个突发请求立马处理结束，后续来了请求也不会立马处理。<strong>burst=20</strong> 相当于缓存队列中占了20个坑，即使请求被处理了，这20个位置这只能按 100ms一个来释放。</p><p>这就达到了速率稳定，但突然流量也能正常处理的效果。</p><h3 id="limit-conn-module"><a href="#limit-conn-module" class="headerlink" title="limit_conn_module"></a>limit_conn_module</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">limit_conn_zone <span class="hljs-variable">$binary_remote_addr</span> <span class="hljs-attribute">zone</span>=perip:10m;<br>limit_conn_zone <span class="hljs-variable">$server_name</span> <span class="hljs-attribute">zone</span>=perserver:10m;<span class="hljs-built_in"></span><br><span class="hljs-built_in">server </span>&#123;<br><span class="hljs-built_in">..</span>.<br>limit_conn perip 10;<br>limit_conn perserver 100;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>limit_conn perip 10</strong> 作用的key 是 <strong>$binary_remote_addr</strong>，表示限制单个IP同时最多能持有10个连接。</p><p><strong>limit_conn perserver 100</strong> 作用的key是 <strong>$server_name</strong>，表示虚拟主机(server) 同时能处理并发连接的总数。</p><p>需要注意的是：只有当 <strong>request header</strong> 被后端server处理后，这个连接才进行计数</p><h4 id="设置白名单"><a href="#设置白名单" class="headerlink" title="设置白名单"></a>设置白名单</h4><p>限流主要针对外部访问，内网访问相对安全，可以不做限流，通过设置白名单即可。利用 Nginx ngx_http_geo_module 和 ngx_http_map_module两个工具模块即可搞定。</p><p>在 <strong>nginx.conf</strong> 的 <strong>http</strong> 部分中配置白名单：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs routeros">geo <span class="hljs-variable">$limit</span> &#123;<br>   <span class="hljs-built_in"> default </span>1;<br>    10.0.0.0/8 0;<br>    192.168.0.0/24 0;<br>    172.20.0.35 0;<br>&#125;<br>map <span class="hljs-variable">$limit</span> <span class="hljs-variable">$limit_key</span> &#123;<br>    0 <span class="hljs-string">&quot;&quot;</span>;<br>    1 <span class="hljs-variable">$binary_remote_addr</span>;<br>&#125;<br>limit_req_zone <span class="hljs-variable">$limit_key</span> <span class="hljs-attribute">zone</span>=myRateLimit:10m <span class="hljs-attribute">rate</span>=10r/s;<br></code></pre></td></tr></table></figure><p><strong>geo</strong> 对于白名单(子网或IP都可以) 将返回0，其他IP将返回1。</p><p><strong>map</strong> 将 <strong>$limit</strong> 转换为 <strong>$limit_key</strong>，如果是 <strong>$limit</strong> 是0(白名单)，则返回空字符串；如果是1，则返回客户端实际IP。</p><p><strong>limit_req_zone</strong> 限流的key不再使用 <strong>$binary_remote_addr</strong>，而是 <strong>$limit_key</strong> 来动态获取值。如果是白名单，limit_req_zone 的限流key则为空字符串，<strong>将不会限流</strong>；若不是白名单，将会对客户端真实IP进行限流。</p><h3 id="ab测试"><a href="#ab测试" class="headerlink" title="ab测试"></a>ab测试</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vim">yum -<span class="hljs-keyword">y</span> install apr-util<br>yum -<span class="hljs-keyword">y</span> install yum-utils<br><span class="hljs-keyword">cd</span> /<span class="hljs-keyword">opt</span><br><span class="hljs-built_in">mkdir</span> abtmp<br><span class="hljs-keyword">cd</span> abtmp<br>yumdownloader httpd-tools*<br>rpm2cpio httpd-*.rpm | cpio -idmv<br># 在/<span class="hljs-keyword">opt</span>/abtmp目录下会生成一个usr目录，<span class="hljs-keyword">ab</span>就在此目录中<br></code></pre></td></tr></table></figure><p>简单使用</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 进入/opt/abtmp/usr/bin</span><br><span class="hljs-comment"># -n指定请求数 -c指定连接数</span><br>.<span class="hljs-regexp">/ab -n100 -c10 http:/</span><span class="hljs-regexp">/127.0.0.1/</span><br></code></pre></td></tr></table></figure><h2 id="5-动静分离"><a href="#5-动静分离" class="headerlink" title="5.动静分离"></a>5.动静分离</h2><p>在<strong>server</strong>{}段中加入带正则匹配的<strong>location</strong>来指定匹配项针对服务的动静分离</p><p>静态页面交给nginx处理</p><p>动态请求交给服务器或apache处理</p><p>实现整个网站的动静分离，要求如下：</p><p>1.前端Nginx收到静态请求，直接从NFS中返回给客户端</p><p>2.前端Nginx收到动态请求，通过FastCGI交给服务器处理</p><p>——如果得到静态结果直接从NFS取出结果交给Nginx然后返回给客户端</p><p>——如果需要数据处理服务器连接数据库后将结果返回给Nginx</p><p>3.前端Nginx收到图片请求以.jpg .png .gif等请求交给后端Images服务器处理</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># 多个服务组</span><br><span class="hljs-section">upstream</span> jing &#123;<br><span class="hljs-attribute">server</span>localhost:<span class="hljs-number">8080</span>;<br>&#125;<br><span class="hljs-section">upstream</span> dong &#123;<br><span class="hljs-attribute">server</span>localhost:<span class="hljs-number">8081</span>;<br>&#125;<br><br><span class="hljs-section">location</span> /test.html&#123;<br><span class="hljs-attribute">proxy_pass</span>http://jing;<br>&#125;<br><br><span class="hljs-section">location</span> ~*\.(jpg|gif)$ &#123;<span class="hljs-comment"># location匹配将图片交给Image服务器处理</span><br><span class="hljs-attribute">proxy_pass</span> http://dong;<span class="hljs-comment"># Image服务器需要开启web服务</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="6-镜像服务器"><a href="#6-镜像服务器" class="headerlink" title="6.镜像服务器"></a>6.镜像服务器</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># 启用缓存到本地</span><br><span class="hljs-attribute">proxy_store</span> <span class="hljs-literal">on</span>;<br><span class="hljs-comment"># 表示用户读写权限，如果在error中报路径不允许访问，`chmod -R a+rw` 将下面配置的路径改为相应的权限</span><br><span class="hljs-attribute">proxy_store_access</span> user:rw group:rw all:rw<br><span class="hljs-comment"># 此处为文件的缓存路径，这个路径是和url中的文件路径一致的</span><br>proxy_temp_path 缓存目录;<br><span class="hljs-comment"># 在上面的配置后，虽然文件被缓存到了本地硬盘上，但每次请求仍会向远端拉取文件，为了避免这种情况，还必须增加：</span><br><span class="hljs-attribute">if</span> ( !-e <span class="hljs-variable">$request_filename</span> ) &#123;<br><span class="hljs-attribute">proxy_pass</span> http://.....;<br>&#125;<br><span class="hljs-comment"># &#x27;http://...&#x27;为源服务器地址，默认端口80,如监听其他端口，此处要指出</span><br></code></pre></td></tr></table></figure><p>整体配置如下</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">location</span> / &#123;  <span class="hljs-comment"># 这里的location要换成对应的正则匹配表达式</span><br><span class="hljs-attribute">expires</span> <span class="hljs-number">3d</span>;<span class="hljs-comment"># 设置缓存期限</span><br><span class="hljs-attribute">proxy_set_header</span> Accept-Encoding <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-attribute">root</span> /home/mpeg/nginx;<span class="hljs-comment"># 缓存在服务器上的存储位置</span><br><span class="hljs-attribute">proxy_store</span> <span class="hljs-literal">on</span>;<span class="hljs-comment"># 开启缓存</span><br><span class="hljs-attribute">proxy_store_access</span> user:rw group:rw all:rw;<span class="hljs-comment"># 用户读写权限</span><br><span class="hljs-attribute">proxy_temp_path</span>/home/mpeg/nginx;<span class="hljs-comment"># 文件的缓存路径，这个路径必须和服务器缓存的文件路径一致的</span><br><span class="hljs-attribute">if</span> ( !-e <span class="hljs-variable">$request_filename</span> ) &#123;<br><span class="hljs-attribute">proxy_pass</span> http://192.168.0.1;<span class="hljs-comment"># 此处为源服务器地址</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="7-热备部署-双主模式"><a href="#7-热备部署-双主模式" class="headerlink" title="7.热备部署 双主模式"></a>7.热备部署 双主模式</h2><p><strong>用Nginx做负载均衡，作为架构的最前端或中间层，随着日益增长的访问量，需要给负载均衡做高可用架构，利用keepalived解决单点风险，一旦Nginx宕机能快速切换到备份服务器</strong></p><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/image-20210302131730846.png" alt="image-20210302131730846"></p><h3 id="keepalived"><a href="#keepalived" class="headerlink" title="keepalived"></a>keepalived</h3><p>配置Keepalived高可用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /etc/keepalived/keepalived.conf keepalived.conf.bak <span class="hljs-comment"># 备份初始配置文件</span><br></code></pre></td></tr></table></figure><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs pf">global_defs &#123;<br>vrrp_garp_interval <span class="hljs-number">0</span><br>vrrp_gna_interval <span class="hljs-number">0</span><br>&#125;<br>vrrp_instance_VI_1 &#123;<br><span class="hljs-keyword">state</span> MASTER<span class="hljs-comment"># 备用机修改为 BACKUP</span><br>interface enp0s8<span class="hljs-comment"># 修改为对应接口</span><br>virtual_router_id <span class="hljs-number">50</span><br>priority <span class="hljs-number">100</span><span class="hljs-comment"># 权重 备用比主机低就可以了</span><br>advert_int <span class="hljs-number">1</span><br>authentication &#123;<span class="hljs-comment"># 认证参数 备用和主机保持一致</span><br>auth_type PASS<br>auth_pass <span class="hljs-number">1111</span><br>&#125;<br>virtual_ipaddress &#123;  <span class="hljs-comment"># 虚拟地址</span><br><span class="hljs-number">192.168</span>.<span class="hljs-number">56.120</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="nginx服务热备"><a href="#nginx服务热备" class="headerlink" title="nginx服务热备"></a>nginx服务热备</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">upstream</span> ... &#123;<br><span class="hljs-attribute">server</span> <span class="hljs-number">127.0.0.1:8080</span>;<br><span class="hljs-attribute">server</span> <span class="hljs-number">127.0.0.1:8081</span> backup;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="8-安全认证-通常不会面向用户"><a href="#8-安全认证-通常不会面向用户" class="headerlink" title="8.安全认证(通常不会面向用户)"></a>8.安全认证(通常不会面向用户)</h2><h3 id="htppasswd-生成密码文件"><a href="#htppasswd-生成密码文件" class="headerlink" title="htppasswd 生成密码文件"></a>htppasswd 生成密码文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install httpd-tools -y<br></code></pre></td></tr></table></figure><p>htpasswd指令用来创建和更新用于基本认证的用户认证密码文件。htpasswd指令必须对密码文件有读写权限，否则会返回错误码。</p><p>htpasswd参数列表：</p><div class="table-container"><table><thead><tr><th>参数</th><th>参数说明</th></tr></thead><tbody><tr><td>-b</td><td>密码直接写在命令行中，而非使用提示输入的方式</td></tr><tr><td>-c</td><td>创建密码文件，若文件存在，则覆盖文件重新写入</td></tr><tr><td>-n</td><td>不更新密码文件，将用户名密码进行标准输出</td></tr><tr><td>-m</td><td>使用MD5算法对密码进行处理</td></tr><tr><td>-d</td><td>使用CRYPT算法对密码进行处理</td></tr><tr><td>-s</td><td>使用SHA算法对密码进行处理</td></tr><tr><td>-p</td><td>不对密码进行加密处理，使用明文密码</td></tr><tr><td>-D</td><td>从密码文件中删除指定用户记录</td></tr></tbody></table></div><p>htpasswd生成Nginx密码文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">htpasswd -bc /usr/local/nginx/conf/nginxpasswd Securitit 000000<br></code></pre></td></tr></table></figure><p>若要在已有Nginx密码文件中追加用户，则无需-c参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">htpasswd -b /usr/local/nginx/conf/nginxpasswd www 111111<br></code></pre></td></tr></table></figure><h3 id="启用安全认证"><a href="#启用安全认证" class="headerlink" title="启用安全认证"></a>启用安全认证</h3><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs abnf">location / &#123;<br>root html<span class="hljs-comment">;</span><br>auth_basic <span class="hljs-string">&quot;Restricted&quot;</span><span class="hljs-comment">;</span><br>auth_basic_user_file /usr/local/nginx/conf/nginxpasswd<span class="hljs-comment">;</span><br>....<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="9-Http-rightarrow-Https"><a href="#9-Http-rightarrow-Https" class="headerlink" title="9. Http $\rightarrow$ Https"></a>9. Http $\rightarrow$ Https</h2><p>同时监听80和443端口，用if判断端口，给80端口的域名进行重写，做到访问80自动跳转到443</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># efk转发</span><br>    server&#123;<br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span>;<br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">443</span> ssl;<br>        <span class="hljs-attribute">server_name</span>  jenscc.me;<br><br>        <span class="hljs-attribute">ssl_certificate</span>      cert/jenscc.pem;<br>        <span class="hljs-attribute">ssl_certificate_key</span>  cert/jenscc.key;<br><br>        <span class="hljs-attribute">ssl_session_cache</span>    shared:SSL:<span class="hljs-number">1m</span>;<br>        <span class="hljs-attribute">ssl_session_timeout</span>  <span class="hljs-number">5m</span>;<br><br>        <span class="hljs-attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;<br>        <span class="hljs-comment">#表示使用的加密套件的类型。</span><br>        <span class="hljs-attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span>; <span class="hljs-comment">#表示使用的TLS协议的类型。</span><br>        <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br><br>        <span class="hljs-comment">#强制https访问</span><br>        <span class="hljs-attribute">add_header</span> Strict-Transport-Security <span class="hljs-string">&quot;max-age=63072000; includeSubDomains; preload&quot;</span>;<br><br>        <span class="hljs-attribute">if</span> (<span class="hljs-variable">$server_port</span> != <span class="hljs-string">&#x27;443&#x27;</span> ) &#123;<br>            <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^/(.*)$</span> https://<span class="hljs-variable">$host</span>/<span class="hljs-variable">$1</span> <span class="hljs-literal">permanent</span>;<br>        &#125;<br><br>        <span class="hljs-section">location</span> / &#123;<br>            <span class="hljs-attribute">root</span> html;<br>            <span class="hljs-attribute">index</span>  index.html index.htm;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>archlinux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>配置你的Arch</title>
    <link href="/2021/07/07/%E9%85%8D%E7%BD%AE%E4%BD%A0%E7%9A%84Arch/"/>
    <url>/2021/07/07/%E9%85%8D%E7%BD%AE%E4%BD%A0%E7%9A%84Arch/</url>
    
    <content type="html"><![CDATA[<p>Arch配置好archlinuxcn和aur以后，基本可以满足大部分日常软件的需求，但是呢，如果想用Arch替代Kali，那么还需要添加blackarch。</p><p>我会简述一下如何添加blackarch并推荐一些常用软件。</p><span id="more"></span><h3 id="添加blackarch源"><a href="#添加blackarch源" class="headerlink" title="添加blackarch源"></a>添加blackarch源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo vim /etc/pacman.conf<br></code></pre></td></tr></table></figure><p>在配置文件末尾加入以下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">[blackarch]<br>SigLevel = Optional TrustAll<br>Server = https://mirrors.ustc.edu.cn/blackarch/$repo/os/$arch<br></code></pre></td></tr></table></figure><p>然后更新一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -Syyu<br><span class="hljs-meta prompt_"># </span><span class="language-bash">或者</span><br>yay -Syyu<br></code></pre></td></tr></table></figure><p>如果没什么问题，那么便添加成功了</p><h3 id="常用软件推荐"><a href="#常用软件推荐" class="headerlink" title="常用软件推荐"></a>常用软件推荐</h3><h4 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h4><p>一般来说，我会推荐<code>Chrome</code>，当然<code>firefox</code>也可以，至于<code>edge</code>，因为我一直使用chrome，通过Google帐号和我的Windows做同步，所以没有使用过，也懒得切换；<code>Chromium</code>被Google打压了，使用不便。</p><h4 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h4><p>我使用的是<code>fcitx5</code>+<code>Rime</code>，自己配置词库，加肥猫词库和萌娘词库，主要是为了方便使用emoji、数学符号、希腊字母，如果没有这方面的需求，<code>fcitx5-chinese-addons</code>就十分好用了</p><h4 id="文本编辑器"><a href="#文本编辑器" class="headerlink" title="文本编辑器"></a>文本编辑器</h4><p>图形化用<code>vscode</code>，<code>kate</code>也还可以，命令行使用<code>neovim</code>，配合<code>coc-nvim</code>基本是最容易配置且效果很好，如果深入配置，那么可以参考这个项目<a href="https://github.com/ChristianChiarulli/LunarVim">LunarVim</a></p><p>记笔记什么的使用<code>Typora</code></p><p>处理word、ppt、exel，推荐<code>wps-office</code></p><h4 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h4><p>在线音乐可以使用<code>spotify</code>，曲库比较全，国内音乐软件通通不推荐，还不如拿浏览器播放。本地音乐可以使用<code>vlc</code></p><h4 id="终端模拟器"><a href="#终端模拟器" class="headerlink" title="终端模拟器"></a>终端模拟器</h4><p>我目前使用的是<code>alacritty</code>+<code>tmux</code>，<a href="https://github.com/Jenscc/myconfig">配置文件</a></p><h4 id="Tim-微信"><a href="#Tim-微信" class="headerlink" title="Tim/微信"></a>Tim/微信</h4><p>我个人使用下来，体验最佳的是这两个<code>deepin-wine-tim</code>、<code>deepin-wine-wechat</code>，tim需要手动切换到deepin-wine，并且注意宋体bug，具体参考<a href="https://github.com/countstarlight/deepin-wine-tim-arch">github</a></p><h4 id="关于fq"><a href="#关于fq" class="headerlink" title="关于fq"></a>关于fq</h4><p><a href="https://github.com/Qv2ray/Qv2ray">qv2ray</a>是一个不错的选择，通过插件可以支持ssr,trojan等，配合cgproxy可以实现全局代理，但这是个坑点，推荐阅读这篇<a href="https://zhangjk98.xyz/qv2ray-transparent-proxy/">博客</a></p><p>arch上的软件数之不尽，还有许多好用的软件，比如<code>termius</code>、<code>火焰截图</code>等等。但适合的才是最好的，对我来说没用的软件，那么它再好，也还是没用的。</p>]]></content>
    
    
    
    <tags>
      
      <tag>archlinux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue笔记</title>
    <link href="/2021/07/03/Vue%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/07/03/Vue%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>为了应付一些课设的要求，就去B站找了个培训机构 的视频学习了一下Vue2，这是当时记的笔记</p><span id="more"></span><h1 id="vue基础"><a href="#vue基础" class="headerlink" title="vue基础"></a>vue基础</h1><h2 id="MVVM"><a href="#MVVM" class="headerlink" title="MVVM"></a>MVVM</h2><p>MVC</p><p>M：model    V：view    C：controller</p><p>MVVM</p><p>M：model    V：view    VM：view model</p><h3 id=""><a href="#" class="headerlink" title=" "></a> </h3><h3 id="VM的实现原理"><a href="#VM的实现原理" class="headerlink" title="VM的实现原理"></a>VM的实现原理</h3><p>view model中定义了一个Observer(观察者)</p><ul><li>ViewModel能够观察到数据的变化，并对视图对应的内容进行更新</li><li>ViewModel能够监听到视图数据的变化，并能够通知数据发生变化</li></ul><p>——MVVM通过VM实现了<font color='red'>双向数据绑定</font></p><h2 id="一-vue快速开始"><a href="#一-vue快速开始" class="headerlink" title="一.vue快速开始"></a>一.vue快速开始</h2><h3 id="1-获得vue的cdn文件"><a href="#1-获得vue的cdn文件" class="headerlink" title="1.获得vue的cdn文件"></a>1.获得vue的cdn文件</h3><p><a href="https://www.bootcdn.cn/vue/2.6.12/">https://www.bootcdn.cn/vue/2.6.12/</a></p><h3 id="2-在页面中使用vue"><a href="#2-在页面中使用vue" class="headerlink" title="2.在页面中使用vue"></a>2.在页面中使用vue</h3><ul><li><p>html：<code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;&lt;/div&gt;</code></p></li><li><p>创建一个vue实例</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>        欢迎你！&#123;&#123;name&#125;&#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>, <span class="hljs-comment">// element</span></span><br><span class="language-javascript">        <span class="hljs-comment">// 数据</span></span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;jens&#x27;</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3-vue对象"><a href="#3-vue对象" class="headerlink" title="3.vue对象"></a>3.vue对象</h3><p>new Vue({</p><p>​    el:’’    // 该对象绑定在哪个div上</p><p>​    data:{</p><p>​    }        // 提供数据，里面存放键值对</p><p>})</p><h2 id="二-差-插-值表达式"><a href="#二-差-插-值表达式" class="headerlink" title="二.差(插)值表达式"></a>二.差(插)值表达式</h2><p>差值表达式是用在html被绑定的元素中的。目的是通过差值表达式来获取vue对象中的属性和方法。</p><p>插值表达式不能作为html标签中的属性的值，转到<a href="#v-bind：属性绑定">v-bind</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- vue对象中的data --&gt;</span><br>        我是一位&#123;&#123;major&#125;&#125;程序员<br>        <span class="hljs-comment">&lt;!-- 数组 --&gt;</span><br>        &#123;&#123;[0,1,2,3,4][3]&#125;&#125;<span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>        &#123;&#123; &#123;name:&#x27;jens&#x27;, age:20&#125;.name &#125;&#125;<br>        <span class="hljs-comment">&lt;!-- vue对象中的methods --&gt;</span><br>        &#123;&#123; sayHi() &#125;&#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">major</span>: <span class="hljs-string">&#x27;java&#x27;</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">sayHi</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;Hello&#x27;</span>)</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="三-vue关键字"><a href="#三-vue关键字" class="headerlink" title="三.vue关键字"></a>三.vue关键字</h2><h3 id="1-v-model：双向数据绑定"><a href="#1-v-model：双向数据绑定" class="headerlink" title="1.v-model：双向数据绑定"></a>1.v-model：双向数据绑定</h3><p>将标签中的value值与vue实例中的data属性值进行绑定</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&#x27;app&#x27;</span>&gt;</span></span><br><span class="language-xml">       请输入你的专业：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&#x27;text&#x27;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&#x27;major&#x27;</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span></span><br><span class="language-xml">       ==============================<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span></span><br><span class="language-xml">       我是一位</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">major</span>&#125;&#125;</span><span class="language-xml">程序员</span><br><span class="language-xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">   </span><br><span class="language-xml">   </span><br><span class="language-xml">   new Vue(&#123;</span><br><span class="language-xml">       el: &#x27;#app&#x27;,</span><br><span class="language-xml">       data: &#123;</span><br><span class="language-xml">           major: &#x27;java&#x27;</span><br><span class="language-xml">       &#125;</span><br><span class="language-xml">   &#125;)</span><br></code></pre></td></tr></table></figure><h3 id="2-v-on：事件绑定"><a href="#2-v-on：事件绑定" class="headerlink" title="2.v-on：事件绑定"></a>2.v-on：事件绑定</h3><p>通过配合具体的事件名来触发绑定的vue实例中的函数</p><p>v-on:<em>事件名</em>=’<em>函数名()</em>‘</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs vim">&lt;div id=<span class="hljs-string">&#x27;app&#x27;</span>&gt;<br>        请输入你的专业：&lt;<span class="hljs-built_in">input</span> <span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;text&#x27;</span> v-<span class="hljs-keyword">on</span>:<span class="hljs-built_in">input</span>=<span class="hljs-string">&quot;changeMajor&quot;</span> /&gt;<span class="hljs-symbol">&lt;br&gt;</span><br>    &lt;/div&gt;<br>    <br>    <span class="hljs-keyword">new</span> Vue(&#123;<br>        <span class="hljs-keyword">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,<br>        data: &#123;<br>            major: <span class="hljs-string">&#x27;java&#x27;</span><br>        &#125;,<br>        methods: &#123;<br>            sayHi: <span class="hljs-keyword">function</span> () &#123;<br>                alert(<span class="hljs-string">&#x27;Hello&#x27;</span>)<br>            &#125;,<br>            changeMajor: <span class="hljs-keyword">function</span> () &#123;<br>                console.<span class="hljs-built_in">log</span>(<span class="hljs-string">&#x27;changed&#x27;</span>)<br>            &#125;<br>        &#125;<br>    &#125;)<br></code></pre></td></tr></table></figure><h4 id="event-内置参数对象"><a href="#event-内置参数对象" class="headerlink" title="event 内置参数对象"></a>event 内置参数对象</h4><h5 id="event-target-value"><a href="#event-target-value" class="headerlink" title="event.target.value"></a>event.target.value</h5><p>在响应函数中，可以指明使用event作为参数，该对象表示当前事件，可以通过event.target.value来获得当前事件对象的value的值</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs vim">&lt;<span class="hljs-built_in">input</span> <span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;text&#x27;</span> v-<span class="hljs-keyword">on</span>:<span class="hljs-built_in">input</span>=<span class="hljs-string">&quot;changeMajor&quot;</span> /&gt;<br><br><span class="hljs-keyword">new</span> Vue(&#123;<br>        <span class="hljs-keyword">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,<br>        data: &#123;<br>            major: <span class="hljs-string">&#x27;java&#x27;</span><br>        &#125;,<br>        methods: &#123;<br>            changeMajor: <span class="hljs-keyword">function</span> (event) &#123;<br>                // 效果为在<span class="hljs-built_in">input</span>标签中输入后动态改变major的值<br>                this.major = event.target.value<br>            &#125;<br>        &#125;<br>    &#125;)<br></code></pre></td></tr></table></figure><h4 id="this的用法"><a href="#this的用法" class="headerlink" title="this的用法"></a>this的用法</h4><p>this表示当前vue对象，可以通过this来调用当前对象的属性和方法</p><h4 id="v-on的简写"><a href="#v-on的简写" class="headerlink" title="v-on的简写 @"></a>v-on的简写 @</h4><p>v-on:input=”” ==&gt; @input=””</p><h3 id="3-v-bind：属性绑定"><a href="#3-v-bind：属性绑定" class="headerlink" title="3.v-bind：属性绑定"></a>3.v-bind：属性绑定</h3><p>&lt;… v-bind:<em>属性名</em>=”<em>vue中的键名</em>“ …&gt;</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">a</span> v-bind:href=<span class="hljs-string">&quot;link&quot;</span>&gt;百度&lt;/a&gt;<br><br>new <span class="hljs-built_in">Vue</span>(&#123;<br>        el: <span class="hljs-string">&#x27;#app&#x27;</span>,<br>        data: &#123;<br>            link: <span class="hljs-string">&#x27;https:/www.baidu.com&#x27;</span><br>        &#125;<br>    &#125;)<br></code></pre></td></tr></table></figure><h5 id="v-bind-简写"><a href="#v-bind-简写" class="headerlink" title="v-bind 简写 :"></a>v-bind 简写 :</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;a v-bind:<span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;link&quot;</span>&gt;百度&lt;/a&gt; ===&gt;  &lt;a :<span class="hljs-attribute">href</span>=<span class="hljs-string">&#x27;link&#x27;</span>&gt;<br></code></pre></td></tr></table></figure><h3 id="4-v-once"><a href="#4-v-once" class="headerlink" title="4.v-once"></a>4.v-once</h3><p>指明该标签中的差值表达式只获取一次数据。之后的数据变化不影响该表达式的值。</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-once</span>&gt;</span></span><br><span class="language-xml">    </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">link</span>&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;link&quot;</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="5-v-html-和-v-text"><a href="#5-v-html-和-v-text" class="headerlink" title="5.v-html 和 v-text"></a>5.v-html 和 v-text</h3><p>v-html会将vue中的属性的值作为html的元素来使用</p><p>v-text会将vue中的属性的值只作为纯文本来使用</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lisp">&lt;span v-html=&#x27;mylink&#x27;&gt;&lt;/span&gt;&lt;span v-text=&#x27;mylink&#x27;&gt;&lt;/span&gt;new Vue(&#123;        el: &#x27;#app&#x27;,        data: &#123;            link: &#x27;https<span class="hljs-symbol">:/www</span>.baidu.com&#x27;,            mylink: &#x27;&lt;a href=<span class="hljs-string">&quot;https:/www.baidu.com&quot;</span>&gt;baidu&lt;/a&gt;&#x27;        &#125;    &#125;)<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/image-20210405154551206.png" alt="image-20210405154551206"></p><h2 id="四-vue中的事件"><a href="#四-vue中的事件" class="headerlink" title="四.vue中的事件"></a>四.vue中的事件</h2><h3 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a><a href="https://cn.vuejs.org/v2/guide/events.html">事件处理</a></h3><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span></span><br><span class="language-xml">    </span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">count</span> &gt; <span class="hljs-number">10</span> ? <span class="hljs-string">&#x27;大于10&#x27;</span> : <span class="hljs-string">&#x27;小于10&#x27;</span> &#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span></span><br><span class="language-xml">    </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">count</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addbtn()&quot;</span>&gt;</span>增加<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;relsbtn()&quot;</span>&gt;</span>减少<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;mystep&quot;</span> /&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> @<span class="hljs-attr">mousemove</span>=<span class="hljs-string">&quot;mymo&quot;</span>&gt;</span></span><br><span class="language-xml">        </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">x</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span></span><br><span class="language-xml">        </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">y</span>&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- &lt;span @mousemove=&quot;mystopmo&quot;&gt;停止鼠标移动事件&lt;/span&gt; --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> @<span class="hljs-attr">mousemove.stop</span>&gt;</span>停止鼠标移动事件<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"></span><br><span class="language-xml">    new Vue(&#123;</span><br><span class="language-xml">    el: &#x27;#app&#x27;,</span><br><span class="language-xml">    data: &#123;</span><br><span class="language-xml">        count: 0,</span><br><span class="language-xml">        mystep: 1,</span><br><span class="language-xml">        x: 0,</span><br><span class="language-xml">        y: 0</span><br><span class="language-xml">    &#125;,</span><br><span class="language-xml">    methods: &#123;</span><br><span class="language-xml">        addbtn: function () &#123;</span><br><span class="language-xml">            this.count += this.mystep - 0</span><br><span class="language-xml">        &#125;,</span><br><span class="language-xml">        relsbtn: function () &#123;</span><br><span class="language-xml">            this.count -= this.mystep - 0</span><br><span class="language-xml">        &#125;,</span><br><span class="language-xml">        mymo: function (event) &#123;</span><br><span class="language-xml">            this.x = event.clientX</span><br><span class="language-xml">            this.y = event.clientY</span><br><span class="language-xml">            console.log(event)</span><br><span class="language-xml">        &#125;,</span><br><span class="language-xml">        mystopmo: function (event) &#123;</span><br><span class="language-xml">            event.stopPropagation()</span><br><span class="language-xml">        &#125;</span><br><span class="language-xml">    &#125;</span><br><span class="language-xml">&#125;)</span><br></code></pre></td></tr></table></figure><h3 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a><a href="https://cn.vuejs.org/v2/guide/events.html#事件修饰符">事件修饰符</a></h3><p>在事件处理程序中调用 <code>event.preventDefault()</code> 或 <code>event.stopPropagation()</code> 是非常常见的需求。尽管我们可以在方法中轻松实现这点，但更好的方式是：方法只有纯粹的数据逻辑，而不是去处理 DOM 事件细节。</p><p>为了解决这个问题，Vue.js 为 <code>v-on</code> 提供了<strong>事件修饰符</strong>。之前提过，修饰符是由点开头的指令后缀来表示的。</p><ul><li><code>.stop</code></li><li><code>.prevent</code></li><li><code>.capture</code></li><li><code>.self</code></li><li><code>.once</code></li><li><code>.passive</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 阻止单击事件继续传播 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">v-on:click.stop</span>=<span class="hljs-string">&quot;doThis&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 提交事件不再重载页面 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">v-on:submit.prevent</span>=<span class="hljs-string">&quot;onSubmit&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 修饰符可以串联 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">v-on:click.stop.prevent</span>=<span class="hljs-string">&quot;doThat&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 只有修饰符 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">v-on:submit.prevent</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 添加事件监听器时使用事件捕获模式 --&gt;</span><br><span class="hljs-comment">&lt;!-- 即内部元素触发的事件先在此处理，然后才交由内部元素进行处理 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-on:click.capture</span>=<span class="hljs-string">&quot;doThis&quot;</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 只当在 event.target 是当前元素自身时触发处理函数 --&gt;</span><br><span class="hljs-comment">&lt;!-- 即事件不是从内部元素触发的 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-on:click.self</span>=<span class="hljs-string">&quot;doThat&quot;</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="按键修饰符"><a href="#按键修饰符" class="headerlink" title="按键修饰符"></a><a href="https://cn.vuejs.org/v2/guide/events.html#按键修饰符">按键修饰符</a></h3><p>在监听键盘事件时，我们经常需要检查详细的按键。Vue 允许为 <code>v-on</code> 在监听键盘事件时添加按键修饰符：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 只有在 `key` 是 `Enter` 时调用 `vm.submit()` --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-on:keyup.enter</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>你可以直接将 <a href="https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values"><code>KeyboardEvent.key</code></a> 暴露的任意有效按键名转换为 kebab-case 来作为修饰符。</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">&lt;<span class="hljs-keyword">input</span> v-<span class="hljs-keyword">on</span>:keyup.<span class="hljs-keyword">page</span>-down=<span class="hljs-string">&quot;onPageDown&quot;</span>&gt;<br></code></pre></td></tr></table></figure><p>在上述示例中，处理函数只会在 <code>$event.key</code> 等于 <code>PageDown</code> 时被调用。</p><h2 id="五-Vue改变内容"><a href="#五-Vue改变内容" class="headerlink" title="五.Vue改变内容"></a>五.Vue改变内容</h2><h3 id="差值表达式"><a href="#差值表达式" class="headerlink" title="差值表达式"></a>差值表达式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span>        &#123;&#123;count&#125;&#125;<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>        &#123;&#123;result&#125;&#125;<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addbtn(2)&quot;</span>&gt;</span>增加<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,        <span class="hljs-attr">data</span>: &#123;            <span class="hljs-attr">count</span>: <span class="hljs-number">0</span>,            <span class="hljs-attr">result</span>: <span class="hljs-string">&quot;?&quot;</span>        &#125;,        <span class="hljs-attr">methods</span>: &#123;            <span class="hljs-attr">addbtn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">step</span>) &#123;                <span class="hljs-variable language_">this</span>.<span class="hljs-property">count</span> += step                <span class="hljs-variable language_">this</span>.<span class="hljs-property">result</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">count</span> &gt; <span class="hljs-number">10</span> ? <span class="hljs-string">&quot;大于10&quot;</span> : <span class="hljs-string">&quot;小于10&quot;</span>            &#125;        &#125;    &#125;)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="computed-计算属性"><a href="#computed-计算属性" class="headerlink" title="computed 计算属性"></a>computed 计算属性</h3><h4 id="什么是计算属性"><a href="#什么是计算属性" class="headerlink" title="什么是计算属性"></a>什么是计算属性</h4><p>计算属性是一个<strong>属性</strong>，其次，这个属性有<strong>计算</strong>的能力，这里计算的方式为函数；具体来说，他就是一个将函数结果缓存起来的属性。</p><h4 id="计算属性与方法的区别"><a href="#计算属性与方法的区别" class="headerlink" title="计算属性与方法的区别"></a>计算属性与方法的区别</h4><p>计算属性更像是一个data，是静态的结果；方法是一个函数，是动态的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&#x27;app&#x27;</span>&gt;&#123;&#123;<span class="hljs-title function_">getCurrentTime</span>()&#125;&#125;&lt;br&gt;&#123;&#123;getCurrentTime1&#125;&#125;&lt;/div&gt;<span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,<span class="hljs-attr">methods</span>: &#123;<span class="hljs-attr">getCurrentTime</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>()&#125;&#125;,<span class="hljs-attr">computed</span>: &#123;<span class="hljs-attr">getCurrentTime1</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>()&#125;&#125;&#125;)<br></code></pre></td></tr></table></figure><h3 id="watch-监控属性"><a href="#watch-监控属性" class="headerlink" title="watch 监控属性"></a>watch 监控属性</h3><p>通过在watch里给属性绑定函数，当属性的值发生变化时，该函数就会被调用。调用时可以接收两个参数，第一个参数是属性改变后的值，第二个参数是属性改变前的值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&#x27;app&#x27;</span>&gt;</span><br>        &#123;&#123;title&#125;&#125;        <br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">    </span><br><span class="language-javascript">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(</span><br><span class="language-javascript">        &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;hello&quot;</span></span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">watch</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">title</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">newValue, oldValue</span>) &#123;</span><br><span class="language-javascript">                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;title changed&quot;</span>)</span><br><span class="language-javascript">                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(newValue + <span class="hljs-string">&#x27;::&#x27;</span> + oldValue)</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="六-Vue-改变样式"><a href="#六-Vue-改变样式" class="headerlink" title="六.Vue 改变样式"></a>六.Vue 改变样式</h2><h4 id="1-class的动态绑定"><a href="#1-class的动态绑定" class="headerlink" title="1.class的动态绑定"></a>1.class的动态绑定</h4><p>通过给html元素的class属性绑定vue中的属性值，得到样式的动态绑定</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">      <span class="hljs-selector-class">.mydiv</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">220px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">background-color</span>: gray;</span><br><span class="language-css">      &#125;</span><br><span class="language-css">      <span class="hljs-selector-class">.red</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">background-color</span>: red;</span><br><span class="language-css">      &#125;</span><br><span class="language-css">      <span class="hljs-selector-class">.yellow</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">background-color</span>: yellow;</span><br><span class="language-css">      &#125;</span><br><span class="language-css">      <span class="hljs-selector-class">.green</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">background-color</span>: green;</span><br><span class="language-css">      &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mydiv&quot;</span> <span class="hljs-attr">v-bind:class</span>=<span class="hljs-string">&quot;&#123;red:temp&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mydiv&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mydiv&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;temp=!temp&quot;</span>&gt;</span>点击<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123; <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>, <span class="hljs-attr">data</span>: &#123; <span class="hljs-attr">temp</span>: <span class="hljs-literal">false</span> &#125; &#125;);</span><br><span class="language-javascript">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2-加入computed"><a href="#2-加入computed" class="headerlink" title="2.加入computed"></a>2.加入computed</h4><p>通过computed返回一个json对象，对象里放着多个键值对</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&#x27;app&#x27;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mydiv&quot;</span> <span class="hljs-attr">v-bind:class</span>=<span class="hljs-string">&quot;&#123;red:temp&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;myClassStyle&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mydiv&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mydiv&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;temp=!temp&quot;</span>&gt;</span>点击<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">temp</span>: <span class="hljs-literal">false</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">computed</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">myClassStyle</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">                    <span class="hljs-attr">red</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">temp</span>,</span><br><span class="language-javascript">                    <span class="hljs-attr">myWidth</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">temp</span></span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3-通过v-model来改变样式"><a href="#3-通过v-model来改变样式" class="headerlink" title="3.通过v-model来改变样式"></a>3.通过v-model来改变样式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;mycolor&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mydiv&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;mycolor&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">temp</span>: <span class="hljs-literal">false</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">mycolor</span>: <span class="hljs-string">&#x27;green&#x27;</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">computed</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">myClassStyle</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">                    <span class="hljs-attr">red</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">temp</span>,</span><br><span class="language-javascript">                    <span class="hljs-attr">myWidth</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">temp</span></span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="4-使用v-model绑定多个样式"><a href="#4-使用v-model绑定多个样式" class="headerlink" title="4.使用v-model绑定多个样式"></a>4.使用v-model绑定多个样式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.red</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">background-color</span>: red;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.myWidth</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">450px</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;[mycolor,mywidth]&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mydiv&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">temp</span>: <span class="hljs-literal">false</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">mycolor</span>: <span class="hljs-string">&#x27;green&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">mywidth</span>: <span class="hljs-string">&#x27;myWidth&#x27;</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h4 id="5-在内嵌的css样式绑定Vue的键"><a href="#5-在内嵌的css样式绑定Vue的键" class="headerlink" title="5.在内嵌的css样式绑定Vue的键"></a>5.在内嵌的css样式绑定Vue的键</h4><p><strong>style引用了Vue中的内容，因此是一个键值对，所以需要大括号；js中对象的键是不能出现”backgroud-color“这种形式的，应该改成backgroundColor</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 在内嵌的css样式绑定Vue的键 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;&#123;backgroundColor: mycolor&#125;&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mydiv&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;myStyle&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mydiv&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;[myStyle,&#123;height:mw*2+&#x27;px&#x27;&#125;]&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mydiv&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">    <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">data</span>: &#123; <span class="hljs-attr">temp</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">mycolor</span>: <span class="hljs-string">&quot;green&quot;</span>, <span class="hljs-attr">mywidth</span>: <span class="hljs-string">&quot;myWidth&quot;</span>, <span class="hljs-attr">mw</span>: <span class="hljs-number">450</span> &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">computed</span>: &#123;</span><br><span class="language-javascript">      <span class="hljs-attr">myClassStyle</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span> &#123; <span class="hljs-attr">red</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">temp</span>, <span class="hljs-attr">myWidth</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">temp</span> &#125;;</span><br><span class="language-javascript">      &#125;,</span><br><span class="language-javascript">      <span class="hljs-attr">myStyle</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span> &#123; <span class="hljs-attr">backgroundColor</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">mycolor</span>, <span class="hljs-attr">width</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">mw</span> * <span class="hljs-number">2</span> + <span class="hljs-string">&quot;px&quot;</span> &#125;;</span><br><span class="language-javascript">      &#125;,</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">  &#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h3 id="七-Vue中的语句"><a href="#七-Vue中的语句" class="headerlink" title="七.Vue中的语句"></a>七.Vue中的语句</h3><h4 id="1-分支语句"><a href="#1-分支语句" class="headerlink" title="1.分支语句"></a>1.分支语句</h4><ul><li>v-if</li><li>v-else-if</li><li>v-else</li><li>v-show : 实际上是让该元素的display属性为none，起到隐藏的效果。所以性能更好。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;temp&quot;</span>&gt;</span>if<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot;temp1&quot;</span>&gt;</span>else-if<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 此时temp2的bool值对是否显示else没有影响，只与temp和temp1的值有关 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else</span>=<span class="hljs-string">&quot;temp2&quot;</span>&gt;</span>else<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;temp=!temp&quot;</span>&gt;</span>点我<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">temp</span>: <span class="hljs-literal">false</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">temp1</span>: <span class="hljs-literal">false</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">temp2</span>: <span class="hljs-literal">true</span>,</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2-循环语句"><a href="#2-循环语句" class="headerlink" title="2.循环语句"></a>2.循环语句</h4><ul><li>v-for</li></ul><p>首先定义数据源，然后通过v-for遍历数据源，再通过差值表达式输出数据</p><h5 id="只取值的for："><a href="#只取值的for：" class="headerlink" title="只取值的for："></a>只取值的for：</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;a in args&quot;</span>&gt;</span><br>                &#123;&#123;a&#125;&#125;<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">args</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>],</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="带索引的for："><a href="#带索引的for：" class="headerlink" title="带索引的for："></a>带索引的for：</h5><p>v-for=”(value,key,index) in object”</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 带索引的for --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(a,i) in args&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;i&quot;</span>&gt;</span>&#123;&#123;i&#125;&#125;--&#123;&#123;a&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">args</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>],</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="遍历对象："><a href="#遍历对象：" class="headerlink" title="遍历对象："></a>遍历对象：</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 遍历对象 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(value,key,index) in student&quot;</span>&gt;</span>&#123;&#123;index&#125;&#125;--&#123;&#123;key&#125;&#125;--&#123;&#123;value&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">args</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>],</span><br><span class="language-javascript">            <span class="hljs-attr">student</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;xiaoming&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">age</span>: <span class="hljs-number">20</span></span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="遍历对象数组："><a href="#遍历对象数组：" class="headerlink" title="遍历对象数组："></a>遍历对象数组：</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 遍历对象数组 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;student in students&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(value,key,index) in student&quot;</span>&gt;</span>&#123;&#123;index&#125;&#125;--&#123;&#123;key&#125;&#125;--&#123;&#123;value&#125;&#125;----<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">args</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>],</span><br><span class="language-javascript">            <span class="hljs-attr">students</span>: [&#123;</span><br><span class="language-javascript">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;xiaoming&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">age</span>: <span class="hljs-number">20</span></span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;xiaowang&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">age</span>: <span class="hljs-number">18</span></span><br><span class="language-javascript">            &#125;]</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="Vue进阶"><a href="#Vue进阶" class="headerlink" title="Vue进阶"></a>Vue进阶</h1><h2 id="1-基础开发"><a href="#1-基础开发" class="headerlink" title="1.基础开发"></a>1.基础开发</h2><h3 id="一-Vue实例"><a href="#一-Vue实例" class="headerlink" title="一.Vue实例"></a>一.Vue实例</h3><h4 id="1-Vue对象操作"><a href="#1-Vue对象操作" class="headerlink" title="1.Vue对象操作"></a>1.Vue对象操作</h4><h5 id="1-可以通过一个Vue对象操作另一个Vue对象"><a href="#1-可以通过一个Vue对象操作另一个Vue对象" class="headerlink" title="1.可以通过一个Vue对象操作另一个Vue对象"></a>1.可以通过一个Vue对象操作另一个Vue对象</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> v2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app2&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">changeOtherVueTitle</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                v1.<span class="hljs-property">title</span> = <span class="hljs-string">&quot;Hello Vue&quot;</span></span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">m1</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                v1.<span class="hljs-title function_">toUpCase</span>()</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">    &#125;);</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> v1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app1&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;hello&quot;</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">toUpCase</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">title</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">title</span>.<span class="hljs-title function_">toUpperCase</span>()</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">computed</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">toLowerCase</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">title</span>.<span class="hljs-title function_">toLowerCase</span>()</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">watch</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">title</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">n, o</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(n + <span class="hljs-string">&#x27;:&#x27;</span> + o)</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">    &#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="2-Vue对象操作另一个Vue对象的内容，维度有两个，操作属性、操作方法"><a href="#2-Vue对象操作另一个Vue对象的内容，维度有两个，操作属性、操作方法" class="headerlink" title="2.Vue对象操作另一个Vue对象的内容，维度有两个，操作属性、操作方法"></a>2.Vue对象操作另一个Vue对象的内容，维度有两个，操作属性、操作方法</h5><h5 id="3-Vue的实例属性"><a href="#3-Vue的实例属性" class="headerlink" title="3.Vue的实例属性"></a>3.Vue的实例属性</h5><p>直接通过“对象.属性”的方式调用的属性，是来自于data或computed中的属性，但是Vue对象中的el，data等等这些键也称为属性，这些属性就是Vue对象中的实例属性。</p><ul><li>设置实例属性</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> data = &#123; <span class="hljs-attr">arg1</span>: <span class="hljs-string">&quot;arg1 value&quot;</span>&#125;<span class="hljs-keyword">var</span> v2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123; <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>, <span class="hljs-attr">data</span>: data,&#125;)<br></code></pre></td></tr></table></figure><ul><li>实例属性还能这么调用：v1.$data.title 相当于v1.title</li></ul><h4 id="2-实例属性-ref"><a href="#2-实例属性-ref" class="headerlink" title="2.实例属性 ref"></a>2.实例属性 ref</h4><p>在Vue中往往使用ref属性来代替id属性的使用。那么就可以快速的通过调用ref的值来获得页面中的某个元素。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app2&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;mybtn1&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showVueObject&quot;</span>&gt;</span>点击<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;mybtn2&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showVueObject&quot;</span>&gt;</span>点击<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">var</span> v2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">    <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app2&quot;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">      <span class="hljs-attr">showVueObject</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.<span class="hljs-property">$refs</span>.<span class="hljs-property">mybtn1</span>.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&quot;hello&quot;</span>;</span><br><span class="language-javascript">      &#125;,</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">  &#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3-动态绑定Vue实例到页面中"><a href="#3-动态绑定Vue实例到页面中" class="headerlink" title="3.动态绑定Vue实例到页面中"></a>3.动态绑定Vue实例到页面中</h4><p>​    实现了页面元素和Vue对象的动态绑定，之前都是通过el的方式来绑定；也可以通过mount实例属性进行绑定</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">var</span> v1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">    <span class="hljs-attr">template</span>: <span class="hljs-string">&quot;&lt;h1&gt;hello&lt;/h1&gt;&quot;</span>,</span><br><span class="language-javascript">  &#125;);</span><br><span class="language-javascript">  v1.$mount(<span class="hljs-string">&quot;#app&quot;</span>);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="二-Vue组件"><a href="#二-Vue组件" class="headerlink" title="二.Vue组件"></a>二.Vue组件</h3><h4 id="1-Vue组件"><a href="#1-Vue组件" class="headerlink" title="1.Vue组件"></a>1.Vue组件</h4><p>组件化：可以将Vue对象作为一个组件，反复使用</p><p>​    要想实现组件化，需要在页面中注册组件：关于注册的方式有两种，分别是全局注册和本地注册</p><h5 id="1-注册组件（全局注册）"><a href="#1-注册组件（全局注册）" class="headerlink" title="1.注册组件（全局注册）"></a>1.注册组件（全局注册）</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vue">Vue.component(&quot;组件名&quot;,&#123;vue对象&#125;)<br></code></pre></td></tr></table></figure><h5 id="2-使用组件"><a href="#2-使用组件" class="headerlink" title="2.使用组件"></a>2.使用组件</h5><p>​    在被Vue绑定了的html元素中才能使用组件。如果一个div没有被绑Vue绑定，那么这个div中不能使用之前注册组件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">model1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">model1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">component</span>(<span class="hljs-string">&quot;model1&quot;</span>, &#123;        <span class="hljs-attr">template</span>: <span class="hljs-string">&quot;&lt;div&gt;&#123;&#123;title&#125;&#125;&lt;button type=&#x27;button&#x27; @click=&#x27;btnfn&#x27;&gt;点击&lt;/button&gt;&lt;/div&gt;&quot;</span>,        <span class="hljs-attr">data</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;            <span class="hljs-keyword">return</span> &#123;                <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;hello&quot;</span>            &#125;        &#125;,        <span class="hljs-attr">methods</span>: &#123;            <span class="hljs-attr">btnfn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;                <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;hello&quot;</span>)            &#125;        &#125;    &#125;)    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,    &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="3-作为组件的Vue对象的特点"><a href="#3-作为组件的Vue对象的特点" class="headerlink" title="3.作为组件的Vue对象的特点"></a>3.作为组件的Vue对象的特点</h5><h5 id="特点1"><a href="#特点1" class="headerlink" title="特点1"></a>特点1</h5><p><code>Vue.component(&quot;组件名&quot;,&#123;vue对象&#125;)</code>，这个Vue对象和之前的Vue对象是有的data实例属性的写法是有区别的</p><p>单独的Vue对象 $\Downarrow$</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vue">new Vue(&#123;data:&#123;name:&quot;xm&quot;,age:29&#125;&#125;)<br></code></pre></td></tr></table></figure><p>作为组件的Vue对象 $\Downarrow$</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fortran">&#123;<span class="hljs-keyword">data</span>: <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span></span>&#123;<span class="hljs-keyword">return</span>&#123;<span class="hljs-keyword">name</span>:<span class="hljs-string">&quot;xm&quot;</span>,age:<span class="hljs-number">29</span>&#125;&#125;&#125;<br></code></pre></td></tr></table></figure><h5 id="特点2"><a href="#特点2" class="headerlink" title="特点2"></a>特点2</h5><p>这种组件中template的写法</p><p>template是将内容展现在页面上的一个键，他的值是一个字符串</p><p><strong>注意：template里必须有且只能有一个根元素</strong></p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">template: &quot;<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">title</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&#x27;button&#x27;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&#x27;btnfn&#x27;</span>&gt;</span>点击<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>&quot;</span><br></code></pre></td></tr></table></figure><h4 id="2-Vue的生命周期"><a href="#2-Vue的生命周期" class="headerlink" title="2.Vue的生命周期"></a>2.Vue的生命周期</h4><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/lifecycle.png" alt=""></p><h4 id="3-Vue组件的本地-局部-注册"><a href="#3-Vue组件的本地-局部-注册" class="headerlink" title="3.Vue组件的本地(局部)注册"></a>3.Vue组件的本地(局部)注册</h4><p>vue的组件全局注册后，在html页面的每一个被Vue绑定的div中都能使用</p><p>vue的组件本地注册后，只能在对应vue实例绑定的div中使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">model11</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">model11</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app1&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">model2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">model2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">var</span> model1 = &#123;        <span class="hljs-attr">template</span>: <span class="hljs-string">&quot;&lt;div&gt;&#123;&#123;title&#125;&#125;&lt;button type=&#x27;button&#x27; @click=&#x27;btnfn&#x27;&gt;点击&lt;/button&gt;&lt;/div&gt;&quot;</span>,        <span class="hljs-attr">data</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;            <span class="hljs-keyword">return</span> &#123;                <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;hello&quot;</span>            &#125;        &#125;,        <span class="hljs-attr">methods</span>: &#123;            <span class="hljs-attr">btnfn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;                <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;hello&quot;</span>)            &#125;        &#125;    &#125;    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,        <span class="hljs-attr">components</span>: &#123;            <span class="hljs-string">&quot;model11&quot;</span>: model1        &#125;    &#125;)    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app1&quot;</span>,        <span class="hljs-attr">components</span>: &#123;            <span class="hljs-string">&quot;model2&quot;</span>: model1        &#125;    &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="三-Vue开发模式"><a href="#三-Vue开发模式" class="headerlink" title="三.Vue开发模式"></a>三.Vue开发模式</h3><h4 id="1-vue-cli脚手架"><a href="#1-vue-cli脚手架" class="headerlink" title="1.vue-cli脚手架"></a>1.vue-cli脚手架</h4><h4 id="2-vue文件的组成"><a href="#2-vue文件的组成" class="headerlink" title="2.vue文件的组成"></a>2.vue文件的组成</h4><ul><li>template</li><li>script</li><li>style</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div id=&quot;app&quot;&gt;<br>    &lt;img src=&quot;./assets/logo.png&quot; /&gt;<br>    &lt;h1&gt;&#123;&#123; msg &#125;&#125;&lt;/h1&gt;<br>    &lt;h2&gt;Essential Links&lt;/h2&gt;<br>    &lt;ul&gt;<br>      &lt;li&gt;&lt;a href=&quot;https://vuejs.org&quot; target=&quot;_blank&quot;&gt;Core Docs&lt;/a&gt;&lt;/li&gt;<br>      &lt;li&gt;&lt;a href=&quot;https://forum.vuejs.org&quot; target=&quot;_blank&quot;&gt;Forum&lt;/a&gt;&lt;/li&gt;<br>      &lt;li&gt;<br>        &lt;a href=&quot;https://chat.vuejs.org&quot; target=&quot;_blank&quot;&gt;Community Chat&lt;/a&gt;<br>      &lt;/li&gt;<br>      &lt;li&gt;&lt;a href=&quot;https://twitter.com/vuejs&quot; target=&quot;_blank&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt;<br>    &lt;/ul&gt;<br>    &lt;h2&gt;Ecosystem&lt;/h2&gt;<br>    &lt;ul&gt;<br>      &lt;li&gt;&lt;a href=&quot;http://router.vuejs.org/&quot; target=&quot;_blank&quot;&gt;vue-router&lt;/a&gt;&lt;/li&gt;<br>      &lt;li&gt;&lt;a href=&quot;http://vuex.vuejs.org/&quot; target=&quot;_blank&quot;&gt;vuex&lt;/a&gt;&lt;/li&gt;<br>      &lt;li&gt;<br>        &lt;a href=&quot;http://vue-loader.vuejs.org/&quot; target=&quot;_blank&quot;&gt;vue-loader&lt;/a&gt;<br>      &lt;/li&gt;<br>      &lt;li&gt;<br>        &lt;a href=&quot;https://github.com/vuejs/awesome-vue&quot; target=&quot;_blank&quot;<br>          &gt;awesome-vue&lt;/a<br>        &gt;<br>      &lt;/li&gt;<br>    &lt;/ul&gt;<br>  &lt;/div&gt;&lt;/template<br>&gt;<br>&lt;script&gt;<br>  export default &#123;<br>    name: &quot;app&quot;,<br>    data() &#123;<br>      return &#123; msg: &quot;Welcome to Your Vue.js App&quot; &#125;;<br>    &#125;,<br>  &#125;;<br>&lt;/script&gt;<br>&lt;style lang=&quot;scss&quot;&gt;<br>  app &#123;<br>    font-family: &quot;Avenir&quot;, Helvetica, Arial, sans-serif;<br>    -webkit-font-smoothing: antialiased;<br>    -moz-osx-font-smoothing: grayscale;<br>    text-align: center;<br>    color: #2c3e50;<br>    margin-top: 60px;<br>  &#125;<br>  h1,<br>  h2 &#123;<br>    font-weight: normal;<br>  &#125;<br>  ul &#123;<br>    list-style-type: none;<br>    padding: 0;<br>  &#125;<br>  li &#123;<br>    display: inline-block;<br>    margin: 0 10px;<br>  &#125;<br>  a &#123;<br>    color: #42b983;<br>  &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h5 id="1-在App-vue组件中使用另一个vue组件"><a href="#1-在App-vue组件中使用另一个vue组件" class="headerlink" title="1.在App.vue组件中使用另一个vue组件"></a>1.在App.vue组件中使用另一个vue组件</h5><h5 id="-1"><a href="#-1" class="headerlink" title=" "></a> </h5><h5 id="1-全局注册"><a href="#1-全局注册" class="headerlink" title="1) 全局注册"></a>1) 全局注册</h5><p>在main.js中，通过import和Vue.component配合，来将一个.vue文件注册成为一个标签。该标签可以在整个项目中使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Header</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./components/Header.vue&#x27;</span><span class="hljs-keyword">import</span> <span class="hljs-title class_">Content</span> <span class="hljs-keyword">from</span><br><span class="hljs-string">&#x27;./components/Content.vue&#x27;</span><span class="hljs-keyword">import</span> bottom <span class="hljs-keyword">from</span><br><span class="hljs-string">&#x27;./components/bottom&#x27;</span><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">component</span>(<span class="hljs-string">&#x27;MyHeader&#x27;</span>, <span class="hljs-title class_">Header</span>)<span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">component</span>(<span class="hljs-string">&quot;MyContent&quot;</span>,<br><span class="hljs-title class_">Content</span>)<span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">component</span>(<span class="hljs-string">&quot;MuBottom&quot;</span>, bottom)<br></code></pre></td></tr></table></figure><h5 id="2-本地注册"><a href="#2-本地注册" class="headerlink" title="2) 本地注册"></a>2) 本地注册</h5><p>在组件的内部去注册另外一个组件，成为一个标签，这个标签只在该组件的内部使用，而不能在其他组件内使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div id=&quot;app&quot;&gt;<br>    &lt;Myheader&gt;&lt;/Myheader&gt; &lt;MyContent&gt;&lt;/MyContent&gt; &lt;MyBottom&gt;&lt;/MyBottom&gt;&lt;/div<br>&gt;&lt;/template&gt;<br>&lt;script&gt;<br>  import Header from &quot;./components/Header&quot;<br>  import Content from &quot;./components/Content&quot;    import Bottom from &quot;./components/bottom&quot;<br>  export default &#123;<br>    name: &#x27;app&#x27;,<br>    components: &#123;<br>      &quot;Myheader&quot;: Header,<br>      &quot;MyContent&quot;: Content,<br>      &quot;MyBottom&quot;: Bottom<br>      &#125;<br>  &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h4 id="2-各组件之间的参数传递"><a href="#2-各组件之间的参数传递" class="headerlink" title="2.各组件之间的参数传递"></a>2.各组件之间的参数传递</h4><h5 id="1-父传子"><a href="#1-父传子" class="headerlink" title="1.父传子"></a>1.父传子</h5><p>​    通过子组件的props，来指明可以接收的参数，父组件通过在标签中写明参数的键值对来传递参数</p><p><code>props</code>写法</p><ol><li><p>props:[参数列表]</p><p> props:[‘MyProps1’,’MyProps2’,…]</p></li><li><p>props:{参数对象}</p><p> props: {</p><p> ​    ‘MyProps1’:{            // 参数名</p><p> ​        type:String,        // 类型</p><p> ​        required:true,    // 是否是必须传递的参数</p><p> ​        default:’…’            // 默认值</p><p> ​    },</p><p> ​    …</p><p> }</p></li></ol><p>子组件设参<code>props</code></p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xquery"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">    <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> </span></span><span class="language-xquery">&#123;       <span class="hljs-built_in"> name</span>: <span class="hljs-string">&quot;Content&quot;</span>,        props: [<span class="hljs-string">&quot;MyTitle&quot;</span>]    &#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>父组件使用子组件并传参</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir">&lt;<span class="hljs-title class_">MyContent</span> <span class="hljs-symbol">:MyTitle=<span class="hljs-string">&quot;msg&quot;</span>&gt;&lt;/Mycontent&gt;</span><br></code></pre></td></tr></table></figure><h5 id="2-子传父"><a href="#2-子传父" class="headerlink" title="2.子传父"></a>2.子传父</h5><ol><li><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/image-20210409213825418.png" alt="image-20210409213825418"></p></li><li><p>以事件发射的方式来实现子传父的效果</p></li></ol><p>在子组件中，使用<code>this.$emit(&quot;键&quot;,&quot;值)</code></p><p>在父组件中，在子组件的标签中使用<code>@键=&quot;msg=$event&quot;</code>  其中$event就能得到发射的值，msg是父组件中vue的属性</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">MyContent</span> <span class="hljs-attr">:MyTitle</span>=<span class="hljs-string">&quot;msg&quot;</span> @<span class="hljs-attr">newName</span>=<span class="hljs-string">&quot;msg=$event&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Mycontent</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">import</span> <span class="hljs-title class_">Content</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./components/Content&quot;</span></span><br><span class="language-javascript">    <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;app&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;Hello vue&quot;</span></span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">components</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-string">&quot;MyContent&quot;</span>: <span class="hljs-title class_">Content</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-title class_">FCfn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">m</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">msg</span> = m</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        商品列表</span><br><span class="language-xml">        </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">MyTitle</span>&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;doClick&quot;</span>&gt;</span>点击<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Content&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">props</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-string">&#x27;MyTitle&#x27;</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">type</span>: <span class="hljs-title class_">String</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">default</span>: <span class="hljs-string">&#x27;xx&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-title function_">doClick</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-variable language_">this</span>.$emit(<span class="hljs-string">&#x27;newName&#x27;</span>, <span class="hljs-string">&#x27;hello, js&#x27;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="四-Vue中发送Ajax请求"><a href="#四-Vue中发送Ajax请求" class="headerlink" title="四.Vue中发送Ajax请求"></a>四.Vue中发送Ajax请求</h3><h5 id="1-安装axios-vue-axios"><a href="#1-安装axios-vue-axios" class="headerlink" title="1) 安装axios vue-axios"></a>1) 安装axios vue-axios</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save axios vue-axios<br>npm install<br></code></pre></td></tr></table></figure><h5 id="2-在main-js中引入"><a href="#2-在main-js中引入" class="headerlink" title="2) 在main.js中引入"></a>2) 在main.js中引入</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;axios&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">VueAxios</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-axios&#x27;</span><br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">VueAxios</span>, axios)<br></code></pre></td></tr></table></figure><h5 id="3-发送ajax请求"><a href="#3-发送ajax请求" class="headerlink" title="3) 发送ajax请求"></a>3) 发送ajax请求</h5><ol><li>发送get请求</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vue">this.axios(&#123;<br>method: &#x27;get&#x27;,<br>url: &#x27;http://localhost:8090/regist?mail=&#x27;+this.mail+&#x27;&amp;password=&#x27;+this.password<br>&#125;)<br>.then(function(response)&#123;<br>console.log(response.data)<br>&#125;)<br></code></pre></td></tr></table></figure><ol><li>发送post请求</li></ol><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">this</span>.axios(&#123;<br>method: <span class="hljs-string">&#x27;post&#x27;</span>,<br>url: <span class="hljs-string">&#x27;http://localhost:8090/regist&#x27;</span>,<br><span class="hljs-keyword">data</span>:&#123;<br>mail: <span class="hljs-keyword">this</span>.mail,<br>password: <span class="hljs-keyword">this</span>.password<br>&#125;<br>&#125;)<br>.then(function(response)&#123;<br>console.log(response.<span class="hljs-keyword">data</span>)<br>&#125;)<br></code></pre></td></tr></table></figure><h5 id="4-解决跨域问题"><a href="#4-解决跨域问题" class="headerlink" title="4) 解决跨域问题"></a>4) 解决跨域问题</h5><p>跨域是浏览器对javascript的一种安全限制，浏览器的页面去访问其他服务器上的资源时，就会出现跨域。同源策略，指的是协议、域名、端口完全相同才是安全的</p><p>在spring-mvc.xml中加入如下代码</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">&lt;mvc:cors&gt;<br>    &lt;mvc:mapping path=<span class="hljs-string">&quot;/**&quot;</span><br>        allowed-origins=<span class="hljs-string">&quot;http://domain1.com,http://domain2.com&quot;</span><br>        allowed-methods=<span class="hljs-string">&quot;<span class="hljs-keyword">GET</span>, <span class="hljs-keyword">PUT</span>, <span class="hljs-keyword">OPTIONS</span>, <span class="hljs-keyword">DELETE</span>, <span class="hljs-keyword">PUT</span>, PUSH&quot;</span><br>        allowed-headers=<span class="hljs-string">&quot;Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With&quot;</span><br>        allow-credentials=<span class="hljs-string">&quot;true&quot;</span> /&gt;<br>&lt;/mvc:cors&gt;<br></code></pre></td></tr></table></figure><h6 id="在spring-web项目中的解决办法"><a href="#在spring-web项目中的解决办法" class="headerlink" title="在spring-web项目中的解决办法"></a>在spring-web项目中的解决办法</h6><p>在注解为<code>@SpringBootConfiguration</code>的config文件中重写addCorsMappings方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 数据库课设rpm项目的config如下</span><br><span class="hljs-comment">// src/main/java/edu/dhu/rpm/config/MyWebConfigurer.java</span><br><br><br><span class="hljs-meta">@SpringBootConfiguration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyWebConfigurer</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">WebMvcConfigurer</span> &#123;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> LoginInterceptor <span class="hljs-title function_">getLoginInterceptor</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginInterceptor</span>();<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addInterceptors</span><span class="hljs-params">(InterceptorRegistry registry)</span>&#123;<br>        registry.addInterceptor(getLoginInterceptor()).addPathPatterns(<span class="hljs-string">&quot;/**&quot;</span>).excludePathPatterns(<span class="hljs-string">&quot;/index.html&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addCorsMappings</span><span class="hljs-params">(CorsRegistry registry)</span> &#123;<br>        <span class="hljs-comment">//所有请求都允许跨域</span><br>        registry.addMapping(<span class="hljs-string">&quot;/**&quot;</span>)<br>                .allowedOrigins(<span class="hljs-string">&quot;*&quot;</span>)<br>                .allowedMethods(<span class="hljs-string">&quot;*&quot;</span>)<br>                .allowedHeaders(<span class="hljs-string">&quot;*&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="5-解决axios无法传递data中的参数问题"><a href="#5-解决axios无法传递data中的参数问题" class="headerlink" title="5) 解决axios无法传递data中的参数问题"></a>5) 解决axios无法传递data中的参数问题</h5><p>原因：默认情况下发送axios时请求头中的内容类型为：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-title class_">Content</span>-<span class="hljs-title class_">Type</span><span class="hljs-symbol">:application/json</span>;charset=<span class="hljs-variable constant_">UTF</span>-<span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><p>而实际服务端需要的是：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-title class_">Content</span>-<span class="hljs-title class_">Type</span><span class="hljs-symbol">:application/x-www-form-urlencoded</span><br></code></pre></td></tr></table></figure><p>因此，使用axios的qs内置库中的方法进行内容类型的转换</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">import</span> Qs from <span class="hljs-string">&#x27;qs&#x27;</span><br><br><span class="hljs-keyword">this</span>.axios(&#123;<br>method:<span class="hljs-string">&#x27;post&#x27;</span>,<br>url:<span class="hljs-string">&#x27;http://locahost:8080/Login&#x27;</span>,<br>transformRequest:[function(<span class="hljs-keyword">data</span>)&#123;<br><span class="hljs-keyword">return</span> Qs.stringify(<span class="hljs-keyword">data</span>)<br>&#125;],<br>&#125;)<br></code></pre></td></tr></table></figure><h5 id="6-路由"><a href="#6-路由" class="headerlink" title="6) 路由"></a>6) 路由</h5><p>在Vue中的路由，能够在一个Vue组件中实现其他组件的切换</p><p>也就是说，可以通过路由模块，将指定的组件显示在路由视图中。</p><h6 id="1-安装路由模块"><a href="#1-安装路由模块" class="headerlink" title="1.安装路由模块"></a>1.安装路由模块</h6><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> vue-router -s<br></code></pre></td></tr></table></figure><h6 id="2-设计路由界面"><a href="#2-设计路由界面" class="headerlink" title="2.设计路由界面"></a>2.设计路由界面</h6><p>创建components文件夹,文件夹内分别创建user、Home组件</p><ul><li>user.vue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>&lt;div&gt;<br>        user<br>    &lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><ul><li>Home.vue</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;template&gt;</span><br><span class="hljs-section">&lt;div&gt;</span><br>        <span class="hljs-attribute">Home</span><br>    <span class="hljs-section">&lt;/div&gt;</span><br><span class="hljs-section">&lt;/template&gt;</span><br></code></pre></td></tr></table></figure><h6 id="3-创建静态路由表"><a href="#3-创建静态路由表" class="headerlink" title="3.创建静态路由表"></a>3.创建静态路由表</h6><p>在src下创建routes.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Home</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/Home.vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">User</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/user/user.vue&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> routes = [<br>    &#123;<span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-attr">component</span>:<span class="hljs-title class_">Home</span>&#125;,<br>    &#123;<span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;/user&#x27;</span>, <span class="hljs-attr">component</span>:<span class="hljs-title class_">User</span>&#125;<br>]<br></code></pre></td></tr></table></figure><h6 id="4-引入路由模块并使用"><a href="#4-引入路由模块并使用" class="headerlink" title="4.引入路由模块并使用"></a>4.引入路由模块并使用</h6><p>在main.js中引入路由模块并使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App.vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">VueRouter</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-router&#x27;</span> <span class="hljs-comment">//1.引入路由模块</span><br><span class="hljs-keyword">import</span> &#123;routes&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./routes&#x27;</span>    <span class="hljs-comment">//2.引入静态路由表</span><br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">VueRouter</span>);   <span class="hljs-comment">//3.使用路由模块</span><br><br><span class="hljs-comment">// 4.创建一个VueRouter模块的实例</span><br><span class="hljs-keyword">const</span> router = <span class="hljs-keyword">new</span> <span class="hljs-title class_">VueRouter</span>(&#123;<br>    <span class="hljs-attr">routes</span>:routes<br>&#125;)<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>    <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,<br>    router,     <span class="hljs-comment">//5.把router实例放入到vue实例中</span><br>    <span class="hljs-attr">render</span>: <span class="hljs-function"><span class="hljs-params">h</span> =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>)<br>&#125;)<br></code></pre></td></tr></table></figure><h6 id="5-使用"><a href="#5-使用" class="headerlink" title="5.使用"></a>5.使用</h6><ul><li>App.vue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>&lt;div class=&quot;container&quot;&gt;<br>        &lt;div class=&quot;row&quot;&gt;<br>            &lt;div class=&quot;col-xs-12 col-sm-8&quot;&gt;<br>                &lt;h1&gt;Routing&lt;/h1&gt;<br>                &lt;router-view&gt;&lt;/router-view&gt;<br>    &lt;/div&gt;<br>    &lt;/div&gt;<br>    &lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><p>改变url,发现<code>&lt;router-view&gt;&lt;/router-view&gt;</code>中的内容发生改变</p><ul><li><a href="http://localhost:8080/#/">http://localhost:8080/#/</a>    显示home</li><li><a href="http://localhost:8080/#/user">http://localhost:8080/#/user</a>    显示user</li></ul><p>向router实例中添加mode属性</p><ul><li>“hash”: url带# 适用于调试模式</li><li>“history”: url不带#</li></ul><h6 id="6-链接路由的实现"><a href="#6-链接路由的实现" class="headerlink" title="6.链接路由的实现"></a>6.链接路由的实现</h6><p>创建Header.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>&lt;ul class=&quot;nav nav-pills&quot;&gt;<br>        &lt;router-link to=&quot;/&quot; tag=&quot;li&quot; active-class=&quot;active&quot; exact&gt;&lt;a&gt;Home&lt;/a&gt;&lt;/router-link&gt;<br>        &lt;router-link to=&quot;/user&quot; tag=&quot;li&quot; active-class=&quot;active&quot;&gt;&lt;a&gt;User&lt;/a&gt;&lt;/router-link&gt;<br>    &lt;/ul&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><p>修改App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>&lt;div class=&quot;container&quot;&gt;<br>        &lt;div class=&quot;row&quot;&gt;<br>            &lt;div class=&quot;col-xs-12 col-sm-8&quot;&gt;<br>                &lt;h1&gt;Routing&lt;/h1&gt;<br>                &lt;Home&gt;&lt;/Home&gt;<br>                &lt;router-view&gt;&lt;/router-view&gt;<br>    &lt;/div&gt;<br>    &lt;/div&gt;<br>    &lt;/div&gt;<br>&lt;/template&gt;<br>&lt;script&gt;<br>import Home from &#x27;./components/Header.vue&#x27;<br>    export default&#123;<br>        components:&#123;&#x27;Home&#x27;:Home&#125;<br>    &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>e.g.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>    &lt;div id=&quot;app&quot;&gt;<br>        &lt;div class=&quot;container&quot;&gt;<br>            &lt;div class=&quot;row&quot;&gt;<br>                &lt;ul class=&quot;nav nav-tabs&quot;&gt;<br>                    &lt;li role=&quot;presentation&quot;&gt;<br>                        &lt;router-link to=&quot;/Home&quot;&gt;首页&lt;/router-link&gt;<br>                    &lt;/li&gt;<br>                    &lt;li role=&quot;presentation&quot;&gt;<br>                        &lt;router-link to=&quot;/Products&quot;&gt;商品列表&lt;/router-link&gt;<br>                    &lt;/li&gt;<br>                &lt;/ul&gt;<br>            &lt;/div&gt;<br>            &lt;div class=&quot;row&quot; id=&quot;rv&quot;&gt;<br>                &lt;router-view&gt;&lt;/router-view&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br>    &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br><br>    export default &#123;<br>        name: &#x27;app&#x27;,<br>        data() &#123;<br>            return &#123;<br><br>            &#125;<br>        &#125;,<br><br>    &#125;<br>&lt;/script&gt;<br><br>&lt;style&gt;<br>    #rv &#123;<br>        border: 1px soid red;<br>    &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h6 id="7-路由之间的参数传递"><a href="#7-路由之间的参数传递" class="headerlink" title="7.路由之间的参数传递"></a>7.路由之间的参数传递</h6><p>Header.vue传入参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>&lt;ul class=&quot;nav nav-pills&quot;&gt;<br>        &lt;router-link to=&quot;/&quot; tag=&quot;li&quot; active-class=&quot;active&quot; exact&gt;&lt;a&gt;Home&lt;/a&gt;&lt;/router-link&gt;<br>        &lt;router-link to=&quot;/user/10&quot; tag=&quot;li&quot; active-class=&quot;active&quot;&gt;&lt;a&gt;User&lt;/a&gt;&lt;/router-link&gt;<br>    &lt;/ul&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><p>路由表：router.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vue">export const routes = [<br>    &#123;path:&#x27;/&#x27;, component:Home&#125;,<br>    &#123;path:&#x27;/user/:id&#x27;, component:User&#125;<br>]<br></code></pre></td></tr></table></figure><p>修改user.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>&lt;div&gt;<br>        &lt;div&gt;user&lt;/div&gt;<br>        &lt;p&gt;userId:&#123;&#123;id&#125;&#125;&lt;/p&gt;<br>    &lt;/div&gt;<br>&lt;/template&gt;<br>&lt;script&gt;<br>    export default&#123;<br>        data()&#123;<br>            return&#123;<br>                id:this.$route.params.id<br>            &#125;<br>        &#125;<br>    &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><ul><li><p>设参：</p><p>  通过路由表设置路由参数</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vue">&#123;<br>        path: &quot;/Products/:id&quot;,<br>        component: Products<br>    &#125;<br></code></pre></td></tr></table></figure></li><li><p>传参：</p><p>  通过router-link的to访问路径时携带参数</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">role</span>=<span class="hljs-string">&quot;presentation&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/Products/1&quot;</span>&gt;</span>手机<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>接参：</p><p>  在目标vue中，通过vue中的<code>$route.params.my_param_name</code></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vue">export default &#123;<br>        name: &quot;Products&quot;,<br>        data() &#123;<br>            return &#123;<br>                id: this.$route.params.id<br>            &#125;;<br>        &#125;,<br>    &#125;<br></code></pre></td></tr></table></figure></li></ul><h6 id="设置子路由并监听可以刷新同一父路由下的参数值的变化"><a href="#设置子路由并监听可以刷新同一父路由下的参数值的变化" class="headerlink" title="设置子路由并监听可以刷新同一父路由下的参数值的变化"></a>设置子路由并监听可以刷新同一父路由下的参数值的变化</h6><h5 id="6-路由之间跳转的方式"><a href="#6-路由之间跳转的方式" class="headerlink" title="6) 路由之间跳转的方式"></a>6) 路由之间跳转的方式</h5><h6 id="1-lt-router-link-gt"><a href="#1-lt-router-link-gt" class="headerlink" title="1. &lt;router-link&gt;"></a>1. <code>&lt;router-link&gt;</code></h6><p>通过HTML中的路由链接<code>&lt;router-link to=&quot;路由地址&quot;&gt;</code>进行跳转</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">role</span>=<span class="hljs-string">&quot;presentation&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/Products/1&quot;</span>&gt;</span>手机<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br></code></pre></td></tr></table></figure><h6 id="2-通过js实现路由跳转"><a href="#2-通过js实现路由跳转" class="headerlink" title="2.通过js实现路由跳转"></a>2.通过js实现路由跳转</h6><p><code>this.$router.push(&quot;/Products/1&quot;)</code></p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs lasso">&lt;tempate&gt;<br><span class="hljs-params">...</span><br>&lt;button <span class="hljs-keyword">type</span>=<span class="hljs-string">&quot;button&quot;</span> @click=<span class="hljs-string">&quot;btnfn&quot;</span>&gt;点击&lt;/button&gt;<br><span class="hljs-params">...</span><br>&lt;/template&gt;<br><span class="hljs-params">...</span><br><br>methods: &#123;<br>            btnfn() &#123;<br>                this.$router.push(<span class="hljs-string">&quot;/Products/1&quot;</span>)<br>            &#125;<br>        &#125;<br></code></pre></td></tr></table></figure><h5 id="7-scoped：Vue中组件样式表的作用范围"><a href="#7-scoped：Vue中组件样式表的作用范围" class="headerlink" title="7.scoped：Vue中组件样式表的作用范围"></a>7.scoped：Vue中组件样式表的作用范围</h5><p>​    如果vue组件中的style标签没有带上scoped属性，那么这个style的样式将会作用在整个页面中，而不是当前子组件中</p><h5 id="8-资源打包"><a href="#8-资源打包" class="headerlink" title="8.资源打包"></a>8.资源打包</h5><p>dist目录</p><h4 id="五-webpack"><a href="#五-webpack" class="headerlink" title="五. webpack"></a>五. webpack</h4><h5 id="1-创建工程"><a href="#1-创建工程" class="headerlink" title="1.创建工程"></a>1.创建工程</h5><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">npm init webpack myvuedemo<br><br>? Project <span class="hljs-type">name</span> myvuedemo<br>? Project description A Vue.js project<br>? Author Jens &lt;<span class="hljs-number">1587198543</span>@qq.com&gt;<br>? Vue build standalone<br>? Install vue-router? <span class="hljs-keyword">No</span><br>? Use ESLint <span class="hljs-keyword">to</span> lint your code? <span class="hljs-keyword">No</span><br>? <span class="hljs-keyword">Set</span> up unit tests <span class="hljs-keyword">No</span><br>? Setup e2e tests <span class="hljs-keyword">with</span> Nightwatch? <span class="hljs-keyword">No</span><br>? Should we run `npm install` <span class="hljs-keyword">for</span> you <span class="hljs-keyword">after</span> the project has been created? (recommended) <span class="hljs-keyword">no</span><br></code></pre></td></tr></table></figure><h5 id="2-安装依赖"><a href="#2-安装依赖" class="headerlink" title="2.安装依赖"></a>2.安装依赖</h5><p>需要<code>vue-router</code>、<code>element-ui</code>、<code>axios</code>、<code>sass-loader</code>、<code>node-sass</code>四个插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install vue-router --save-dev<br>npm i element-ui -S<br>npm install --save axios vue-axios<br>npm install sass-loader node-sass --save-dev<br>npm install//安装依赖<br></code></pre></td></tr></table></figure><h5 id="3-配置路由"><a href="#3-配置路由" class="headerlink" title="3.配置路由"></a>3.配置路由</h5><h6 id="1）创建路由表"><a href="#1）创建路由表" class="headerlink" title="1）创建路由表"></a>1）创建路由表</h6><p>在src下创建router文件夹，里面创建index.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">VueRouter</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-router&#x27;</span><br><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Login</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../views/Login.vue&#x27;</span><br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">VueRouter</span>);<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">VueRouter</span>(&#123;<br>    <span class="hljs-attr">routes</span>: [<br>        &#123;<br>            <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/Login&#x27;</span>,<br>            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Login&#x27;</span>,<br>            <span class="hljs-attr">component</span>: <span class="hljs-title class_">Login</span><br>        &#125;<br>    ]<br>&#125;)<br></code></pre></td></tr></table></figure><h6 id="2）在main-js中配置路由表"><a href="#2）在main-js中配置路由表" class="headerlink" title="2）在main.js中配置路由表"></a>2）在main.js中配置路由表</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">VueRouter</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-router&#x27;</span><br><br><span class="hljs-keyword">import</span> router <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./router&#x27;</span><br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">VueRouter</span>)<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span><br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>    <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,<br>    router,<br>    <span class="hljs-attr">components</span>: &#123; <span class="hljs-title class_">App</span> &#125;,<br>    <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;&lt;App/&gt;&#x27;</span><br>&#125;)<br></code></pre></td></tr></table></figure><h6 id="3）在App-vue中创建路由视图"><a href="#3）在App-vue中创建路由视图" class="headerlink" title="3）在App.vue中创建路由视图"></a>3）在App.vue中创建路由视图</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>    &lt;div id=&quot;app&quot;&gt;<br>        &lt;router-view&gt;&lt;/router-view&gt;<br>    &lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><h6 id="4）在项目中使用element-ui"><a href="#4）在项目中使用element-ui" class="headerlink" title="4）在项目中使用element-ui"></a>4）在项目中使用element-ui</h6><p><a href="https://element.eleme.cn/#/zh-CN/component/layout">官方指南</a></p><h4 id="完整引入"><a href="#完整引入" class="headerlink" title="完整引入"></a>完整引入</h4><p>在 main.js 中写入以下内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">ElementUI</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;element-ui&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;element-ui/lib/theme-chalk/index.css&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App.vue&#x27;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ElementUI</span>);<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function"><span class="hljs-params">h</span> =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>)<br>&#125;);<br></code></pre></td></tr></table></figure><p>以上代码便完成了 Element 的引入。需要注意的是，样式文件需要单独引入。</p><h3 id="五-嵌套路由-子路由"><a href="#五-嵌套路由-子路由" class="headerlink" title="五.嵌套路由(子路由)"></a>五.嵌套路由(子路由)</h3><p>在路由显示的组件内部，又嵌套着路由，称为子路由</p><h4 id="1-配置路由表"><a href="#1-配置路由表" class="headerlink" title="1.配置路由表"></a>1.配置路由表</h4><p>修改路由js文件，在对应父路由下添加children</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">VueRouter</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-router&#x27;</span><br><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Login</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../views/Login.vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Home</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../views/Home.vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">ProductList</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;.......&#x27;</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">VueRouter</span>);<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">VueRouter</span>(&#123;<br>    <span class="hljs-attr">routes</span>: [<br>        &#123;<br>            <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/Login&#x27;</span>,<br>            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Login&#x27;</span>,<br>            <span class="hljs-attr">component</span>: <span class="hljs-title class_">Login</span><br>        &#125;,<br>        &#123;<br>            <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/Home&#x27;</span>,<br>            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Home&#x27;</span>,<br>            <span class="hljs-attr">component</span>: <span class="hljs-title class_">Home</span>,<br>            <span class="hljs-attr">children</span>:[<br>            &#123;<br>            <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/productlist&#x27;</span>,<br>            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Productlist&#x27;</span>,<br>            <span class="hljs-attr">component</span>: <span class="hljs-title class_">ProductList</span><br>        &#125;<br>            ]<br>        &#125;<br>    ]<br>&#125;)<br></code></pre></td></tr></table></figure><h4 id="2-使用嵌套路由"><a href="#2-使用嵌套路由" class="headerlink" title="2.使用嵌套路由"></a>2.使用嵌套路由</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/productlist&quot;</span>&gt;</span>商品列表<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="六-路由的重定向"><a href="#六-路由的重定向" class="headerlink" title="六.路由的重定向"></a>六.路由的重定向</h3><p>直接调用另一个已配置好的路由对象即可</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs css">routes: [<br>        &#123;<br>            <span class="hljs-selector-tag">path</span>: <span class="hljs-string">&#x27;/Login&#x27;</span>,<br>            name: <span class="hljs-string">&#x27;Login&#x27;</span>,<br>            component: Login<br>        &#125;,<br>        &#123;<br>            <span class="hljs-selector-tag">path</span>: <span class="hljs-string">&#x27;/Logout&#x27;</span>,<br>            redirect: <span class="hljs-string">&#x27;/Login&#x27;</span><br>        &#125;<br>    ]<br></code></pre></td></tr></table></figure><h3 id="七-传参的两种方式"><a href="#七-传参的两种方式" class="headerlink" title="七.传参的两种方式"></a>七.传参的两种方式</h3><p>`</p><p><img src="https://gitee.com/jenscc/picgo/raw/master/img/image-20210411133323363.png" alt="image-20210411133323363"></p><h4 id="路由钩子-router-hook"><a href="#路由钩子-router-hook" class="headerlink" title="路由钩子 router hook"></a>路由钩子 router hook</h4><ul><li><code>beforeRouteEnter</code> ：在进入路由前执行</li><li><code>beforeRouteLeave</code>：在离开路由前执行</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span>&#123;<br><span class="hljs-attr">props</span>: [<span class="hljs-string">&#x27;id&#x27;</span>],<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;UserProfile&quot;</span>,<br>    <span class="hljs-attr">beforeRouteEnter</span>: <span class="hljs-function">(<span class="hljs-params">to, <span class="hljs-keyword">from</span>, next</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;准备进入个人信息页&quot;</span>)<br>        <span class="hljs-title function_">next</span>(<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;进入到目标页面之后调用的函数&quot;</span>)<br>        )<br>    &#125;,<br>    <span class="hljs-attr">beforeRouteLeave</span>: <span class="hljs-function">(<span class="hljs-params">to, <span class="hljs-keyword">from</span>, next</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;准备离开个人信息页&quot;</span>)<br>        <span class="hljs-title function_">next</span>()<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="八-Mock数据"><a href="#八-Mock数据" class="headerlink" title="八.Mock数据"></a>八.Mock数据</h3><p><a href="https://www.bilibili.com/video/BV1YE411A746?p=62&amp;spm_id_from=pageDriver">easy mock官方网站已下线</a></p><h2 id="2-vue-element-admin"><a href="#2-vue-element-admin" class="headerlink" title="2.vue-element-admin"></a>2.vue-element-admin</h2><h3 id="1-路由和侧边栏"><a href="#1-路由和侧边栏" class="headerlink" title="1.路由和侧边栏"></a>1.路由和侧边栏</h3><p>整个项目的侧边栏是通过路由表动态生成的，可以调整路由表中的内容来改变侧边栏的内容</p><p><strong>具体参考官方文档</strong></p><p><a href="https://panjiachen.github.io/vue-element-admin-site/zh/guide/essentials/router-and-nav.html">官方文档</a></p><h4 id="1-改变侧边栏标题"><a href="#1-改变侧边栏标题" class="headerlink" title="1) 改变侧边栏标题"></a>1) 改变侧边栏标题</h4><p>修改src/router/index.js，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/example&#x27;</span>,<br>    <span class="hljs-attr">component</span>: <span class="hljs-title class_">Layout</span>,<br>    <span class="hljs-attr">redirect</span>: <span class="hljs-string">&#x27;/example/table&#x27;</span>,<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Example&#x27;</span>,<br>    <span class="hljs-attr">meta</span>: &#123; <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;Example&#x27;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;el-icon-s-help&#x27;</span> &#125;,<br>    <span class="hljs-attr">children</span>: [<br>      &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;table&#x27;</span>,<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Table&#x27;</span>,<br>        <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;@/views/table/index&#x27;</span>),<br>        <span class="hljs-attr">meta</span>: &#123; <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;Table&#x27;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;table&#x27;</span> &#125;<span class="hljs-comment">// 此处对应侧边栏的标题和图标</span><br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;tree&#x27;</span>,<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Tree&#x27;</span>,<br>        <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;@/views/tree/index&#x27;</span>),<br>        <span class="hljs-attr">meta</span>: &#123; <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;Tree&#x27;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;tree&#x27;</span> &#125;<br>      &#125;<br>    ]<br>  &#125;,<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用docker构建zookeeper集群</title>
    <link href="/2021/07/03/%E4%BD%BF%E7%94%A8docker%E6%9E%84%E5%BB%BAzookeeper%E9%9B%86%E7%BE%A4/"/>
    <url>/2021/07/03/%E4%BD%BF%E7%94%A8docker%E6%9E%84%E5%BB%BAzookeeper%E9%9B%86%E7%BE%A4/</url>
    
    <content type="html"><![CDATA[<h4 id="zookeeper-常用命令"><a href="#zookeeper-常用命令" class="headerlink" title="zookeeper 常用命令"></a>zookeeper 常用命令</h4><h5 id="1-查询"><a href="#1-查询" class="headerlink" title="1.查询"></a>1.查询</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查询当前节点下的全部子节点</span><br><span class="hljs-built_in">ls</span> 节点名称<br><span class="hljs-comment"># 例子 ls /</span><br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># 查询当前节点下的数据</span><br><span class="hljs-built_in">get</span> 节点名称<br><span class="hljs-comment"># 例子 get /zookeeper</span><br></code></pre></td></tr></table></figure><span id="more"></span><h5 id="2-创建节点"><a href="#2-创建节点" class="headerlink" title="2.创建节点"></a>2.创建节点</h5><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-keyword">create</span> [-s] [-e] znode名称 znode数据<br><br><span class="hljs-meta"># -s: sequence:有序节点</span><br><span class="hljs-meta"># -e: ephemeral:临时节点</span><br></code></pre></td></tr></table></figure><h5 id="3-修改节点数据"><a href="#3-修改节点数据" class="headerlink" title="3.修改节点数据"></a>3.修改节点数据</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> znode名称 新数据<br></code></pre></td></tr></table></figure><h5 id="4-删除节点数据"><a href="#4-删除节点数据" class="headerlink" title="4.删除节点数据"></a>4.删除节点数据</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 删除没有子节点的znode</span><br><span class="hljs-keyword">delete</span> znode名称<br><span class="hljs-comment"># 删除当前节点和全部的子节点</span><br>deleteall znode名称<br></code></pre></td></tr></table></figure><h4 id="zookeeper-集群"><a href="#zookeeper-集群" class="headerlink" title="zookeeper 集群"></a>zookeeper 集群</h4><h5 id="1-zookeeper-投票策略"><a href="#1-zookeeper-投票策略" class="headerlink" title="1.zookeeper 投票策略"></a>1.zookeeper 投票策略</h5><blockquote><p>1.每一个 zookeeper 服务都会被分配一个全局唯一分配的 myid</p><p>2.zookeeper 在执行写数据时，每一个节点都有一个自己的 FIFO 队列。保证写每一个数据的时候，顺序是不会乱的，zookeeper 还会给每一个数据分配一个全局唯一的 zxid，数据越新，zxid 就越大</p><p>选举 Leader：</p><p>1.选举出 zxid 最大的节点作为 Leader</p><p>2.在 zxid 相同的节点中，选举出一个 myid 最大的节点，作为 Leader</p></blockquote><h5 id="2-zooker-集群"><a href="#2-zooker-集群" class="headerlink" title="2.zooker 集群"></a>2.zooker 集群</h5><p>docker-compose.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&quot;3.1&quot;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">zk1:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">zookeeper</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">zk1</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">2181</span><span class="hljs-string">:2181</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">ZOO_MY_ID:</span> <span class="hljs-number">1</span><br>      <span class="hljs-attr">ZOO_SERVERS:</span> <span class="hljs-string">server.1=zk1:2888:3888;2181</span> <span class="hljs-string">server.2=zk2:2888:3888;2181</span> <span class="hljs-string">server.3=zk3:2888:3888;2181</span><br>  <span class="hljs-attr">zk2:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">zookeeper</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">zk2</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">2182</span><span class="hljs-string">:2181</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">ZOO_MY_ID:</span> <span class="hljs-number">2</span><br>      <span class="hljs-attr">ZOO_SERVERS:</span> <span class="hljs-string">server.1=zk1:2888:3888;2181</span> <span class="hljs-string">server.2=zk2:2888:3888;2181</span> <span class="hljs-string">server.3=zk3:2888:3888;2181</span><br>  <span class="hljs-attr">zk3:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">zookeeper</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">zk3</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">2183</span><span class="hljs-string">:2181</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">ZOO_MY_ID:</span> <span class="hljs-number">3</span><br>      <span class="hljs-attr">ZOO_SERVERS:</span> <span class="hljs-string">server.1=zk1:2888:3888;2181</span> <span class="hljs-string">server.2=zk2:2888:3888;2181</span> <span class="hljs-string">server.3=zk3:2888:3888;2181</span><br></code></pre></td></tr></table></figure><h5 id="java-操作-zookeeper"><a href="#java-操作-zookeeper" class="headerlink" title="java 操作 zookeeper"></a>java 操作 zookeeper</h5><h6 id="1-java-连接-zookeeper"><a href="#1-java-连接-zookeeper" class="headerlink" title="1.java 连接 zookeeper"></a>1.java 连接 zookeeper</h6><blockquote><p>1.创建 Maven 工程</p><p>2.导入依赖</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.zookeeper<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>zookeeper<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.7.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.curator<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>curator-recipes<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.1.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.12<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>3.编写连接 zookeeper 集群的工具类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ZkUtil</span> &#123;<br>    <span class="hljs-comment">// 连接zookeeper</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> CuratorFramework <span class="hljs-title function_">cf</span><span class="hljs-params">()</span>&#123;<br><br>        <span class="hljs-type">RetryPolicy</span> <span class="hljs-variable">retryPolicy</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ExponentialBackoffRetry</span>(<span class="hljs-number">3000</span>,<span class="hljs-number">2</span>);<br>        <span class="hljs-type">CuratorFramework</span> <span class="hljs-variable">cf</span> <span class="hljs-operator">=</span> CuratorFrameworkFactory.builder()<br>                .connectString(<span class="hljs-string">&quot;192.168.3.6:2181,192.168.3.6:2182,192.168.3.6:2183&quot;</span>)<br>                .retryPolicy(retryPolicy)<br>                .build();<br>        cf.start();<br>        <span class="hljs-keyword">return</span> cf;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>4.测试</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Demo1</span> &#123;<br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">connect</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-type">CuratorFramework</span> <span class="hljs-variable">cf</span> <span class="hljs-operator">=</span> ZkUtil.cf();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="2-java-操作-Znode-节点"><a href="#2-java-操作-Znode-节点" class="headerlink" title="2.java 操作 Znode 节点"></a>2.java 操作 Znode 节点</h6><blockquote><p>1.查询</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Demo2</span> &#123;<br>    <span class="hljs-type">CuratorFramework</span> <span class="hljs-variable">cf</span> <span class="hljs-operator">=</span> ZkUtil.cf();<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">getChildren</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        List&lt;String&gt; strings=cf.getChildren().forPath(<span class="hljs-string">&quot;/&quot;</span>);<br>        <span class="hljs-keyword">for</span>(String string : strings)&#123;<br>            System.out.println(string);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">getData</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">byte</span>[] bytes = cf.getData().forPath(<span class="hljs-string">&quot;/test&quot;</span>);<br>        System.out.println(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(bytes,<span class="hljs-string">&quot;UTF-8&quot;</span>));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>2.添加</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">create</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception &#123;    cf.create().withMode(CreateMode.PERSISTENT).forPath(<span class="hljs-string">&quot;/test2&quot;</span>,<span class="hljs-string">&quot;uuu&quot;</span>.getBytes());<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>3.修改</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">update</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>    cf.setData().forPath(<span class="hljs-string">&quot;/test2&quot;</span>,<span class="hljs-string">&quot;oooo&quot;</span>.getBytes());<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>4.删除</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">delete</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>    cf.delete().deletingChildrenIfNeeded().forPath(<span class="hljs-string">&quot;/test2&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>5.查看 znode 的状态</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">stat</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>    <span class="hljs-type">Stat</span> <span class="hljs-variable">stat</span> <span class="hljs-operator">=</span> cf.checkExists().forPath(<span class="hljs-string">&quot;/test&quot;</span>);<br>    System.out.println(stat);<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="3-监听通知机制"><a href="#3-监听通知机制" class="headerlink" title="3.监听通知机制"></a>3.监听通知机制</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Demo3</span> &#123;<br>    <span class="hljs-type">CuratorFramework</span> <span class="hljs-variable">cf</span> <span class="hljs-operator">=</span> ZkUtil.cf();<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">listen</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        <span class="hljs-comment">// 1.创建NodeCache对象，指定要监听的znode</span><br>        NodeCache nodeCache=<span class="hljs-keyword">new</span> <span class="hljs-title class_">NodeCache</span>(cf,<span class="hljs-string">&quot;/test&quot;</span>);<br>        nodeCache.start();<br>        <span class="hljs-comment">// 2.添加一个监听器</span><br>        nodeCache.getListenable().addListener(<span class="hljs-keyword">new</span> <span class="hljs-title class_">NodeCacheListener</span>() &#123;<br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">nodeChanged</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>                <span class="hljs-type">byte</span>[] data = nodeCache.getCurrentData().getData();<br>                <span class="hljs-type">Stat</span> <span class="hljs-variable">stat</span> <span class="hljs-operator">=</span> nodeCache.getCurrentData().getStat();<br>                <span class="hljs-type">String</span> <span class="hljs-variable">path</span> <span class="hljs-operator">=</span> nodeCache.getCurrentData().getPath();<br>                System.out.println(<span class="hljs-string">&quot;监听的节点是：&quot;</span>+path);<br>                System.out.println(<span class="hljs-string">&quot;节点现在的数据是：&quot;</span>+<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(data,<span class="hljs-string">&quot;UTF-8&quot;</span>));<br>                System.out.println(<span class="hljs-string">&quot;节点状态是：&quot;</span>+stat);<br>            &#125;<br>        &#125;);<br>        System.out.println(<span class="hljs-string">&quot;开始监听&quot;</span>);<br>        <span class="hljs-comment">// 3.System.in.read()</span><br>        System.in.read();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>arch安装</title>
    <link href="/2021/07/03/arch%E5%AE%89%E8%A3%85/"/>
    <url>/2021/07/03/arch%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h1 id="ARCH安装避坑-ARCH入坑指南"><a href="#ARCH安装避坑-ARCH入坑指南" class="headerlink" title="ARCH安装避坑(ARCH入坑指南)"></a>ARCH安装避坑(ARCH入坑指南)</h1><h2 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h2><p>一般选择最新版的iso镜像即可，本篇文章基于20年9月的镜像，关于制作镜像盘，推荐使用<code>ventoy</code>，虽然有些bug，但对于仅有一个u盘的我来说，免去了我再买一个u盘的需求。</p><h2 id="BIOS"><a href="#BIOS" class="headerlink" title="BIOS"></a>BIOS</h2><p>确保是UEFI,并关闭secure boot</p><span id="more"></span><h2 id="连接wifi"><a href="#连接wifi" class="headerlink" title="连接wifi"></a>连接wifi</h2><p>大概是在20年6月，wifi-menu从镜像中移除了，所以只能用wpa_supplicant</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">ip link #查看无线设备名称，通常为wlan0<br>ip link set wlan0 up #开启你的无线设备<br>iwlist wlan0 scan| grep ESSID #扫描<br>wpa_passphrase wifi名称 wifi密码 &gt; internet.conf<br>wpa_supplicant -c internet.conf -i wlan0 &amp; #-c 指定配置文件 -i 指定设备<br><span class="hljs-meta prompt_"># </span><span class="language-bash">等待+回车</span><br>dhcpcd &amp; <br><span class="hljs-meta prompt_"># </span><span class="language-bash">等待+回车</span><br>ping baidu.com #如果前面没有error,应该能ping通<br></code></pre></td></tr></table></figure><p>[2023-11]：也可以使用iwctl连接WiFi</p><h3 id="更新系统时间"><a href="#更新系统时间" class="headerlink" title="更新系统时间"></a><strong>更新系统时间</strong></h3><p>使用<code>timedatectl</code>命令来确保时间是同步的：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">timedatectl set-ntp true<br>timedatectl status # 确保设置成功<br></code></pre></td></tr></table></figure><h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a><strong>磁盘分区</strong></h2><p>使用<code>fdisk</code>进行磁盘分区：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">fdisk -l # 查看磁盘设备<br>....<br>fdisk /dev/nvme0n1 # 对你的磁盘进行分区，下面默认分引导，主硬盘，交换三个分区<br></code></pre></td></tr></table></figure><p>详细描述见<a href="https://wiki.archlinux.org/index.php/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87">安装指南</a>)和<a href="https://link.zhihu.com/?target=https%3A//wiki.archlinux.org/index.php/Fdisk">fdisk官方文档</a>，这里的描述很简略，如果第一次安装的话，建议参考他人的安装视频</p><h2 id="格式化分区"><a href="#格式化分区" class="headerlink" title="格式化分区"></a>格式化分区</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkfs.fat -F32 /dev/nvme0n1p1 # UEFI引导分区<br>mkfs.xfs /dev/nvme0n1p2 # 引导和交换分区外的其他分区，mkfs.btrfs可以建立btrfs文件格式分区<br>mkswap /dev/nvme0n1p3 # 交换分区<br>swapon /dev/nvme0n1p3 # 开启交换分区<br></code></pre></td></tr></table></figure><h2 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">monut /dev/nvme0n1p2 /mnt # 首先挂载主分区<br>mkdir /mnt/boot<br>mount /dev/nvme0n1p1 /mnt/boot # 挂载引导分区<br></code></pre></td></tr></table></figure><h2 id="运行安装脚本"><a href="#运行安装脚本" class="headerlink" title="运行安装脚本"></a>运行安装脚本</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pacstrap /mnt base linux linux-firmware<br></code></pre></td></tr></table></figure><p>在live环境中使用<code>reflector</code>进行镜像的管理，貌似你一连接网络，live系统会自动执行reflector命令来帮你选择镜像源，默认的是根据下载速率进行排序，所以我们应该可以跳过修改镜像源，如果有问题，那么</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/pacman.d/mirrorlist # 镜像源<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">/etc/pacman.d/mirrorlist</span><br>Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch<br><br>vim /etc/resolv.conf # DNS<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">/etc/resolv.conf</span><br>nameserver 114.114.114.114<br></code></pre></td></tr></table></figure><h2 id="配置系统"><a href="#配置系统" class="headerlink" title="配置系统"></a>配置系统</h2><h3 id="生成fstab文件"><a href="#生成fstab文件" class="headerlink" title="生成fstab文件"></a><strong>生成fstab文件</strong></h3><p>用以下命令生成<code>fstab</code>文件，其中<code>-U</code>选项用来设置UUID：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab<br></code></pre></td></tr></table></figure><p>然后使用</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">cat /mnt/etc/fstab<br></code></pre></td></tr></table></figure><p>命令检查以下文件是否正确（每个分区占一行）</p><h3 id="进入到安装的系统"><a href="#进入到安装的系统" class="headerlink" title="进入到安装的系统"></a><strong>进入到安装的系统</strong></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">arch-chroot /mnt<br></code></pre></td></tr></table></figure><h3 id="安装文本编辑器"><a href="#安装文本编辑器" class="headerlink" title="安装文本编辑器"></a><strong>安装文本编辑器</strong></h3><p>现在的新系统连默认的文本编辑器<code>nano</code>都没有了，所以需要自己手动安装一个，不然后面的一些配置无法实现，所以我选择最强的<code>vim</code>：(建议直接上neovim)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">pacman -S neovim<br>ln -s /usr/bin/nvim /usr/bin/vi #软链接，你的vi何必是vi<br>ln -s /usr/bin/nvim /usr/bin/vim<br></code></pre></td></tr></table></figure><h3 id="时区"><a href="#时区" class="headerlink" title="时区"></a><strong>时区</strong></h3><p>使用下面的命令设置时区：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">ln -sf /usr/share/zoneinfo/Region/City /etc/localtime #北京时间可以将Region/City配置为China/Shanghai<br></code></pre></td></tr></table></figure><p>然后使用<code>hwclock</code>生成<code>/etc/adjtime</code>文件：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">hwclock --systohc<br></code></pre></td></tr></table></figure><h3 id="本地化设置"><a href="#本地化设置" class="headerlink" title="本地化设置"></a><strong>本地化设置</strong></h3><blockquote><p>本地化的程序与库若要本地化文本，都依赖<strong><a href="https://link.zhihu.com/?target=https%3A//wiki.archlinux.org/index.php/Locale">Locale</a></strong>，后者明确规定地域、货币、时区日期的格式、字符排列方式和其他本地化标准等等。在下面两个文件设置：<code>locale.gen</code>与<code>locale.conf</code>。</p></blockquote><ol><li>首先编辑<code>/etc/locale.gen</code>文件，然后将需要的地区的注释移除，建议将<code>en_US UTF-8</code>和<code>zh_CN UTF-8</code>都取消注释。</li><li>执行<code>locale-gen</code>命令生成locale。</li><li>创建<code>/etc/locale.conf</code>文件并编辑<code>LANG</code>这一变量（将系统locale 设置为<code>en_US.UTF-8</code>，系统的<code>Log</code>就会用英文显示。）：</li></ol><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">LANG=en_US.UTF-8<br></code></pre></td></tr></table></figure><p><em>这里最好不要设置为中文locale，会导致TTY乱码</em></p><h3 id="网络设置"><a href="#网络设置" class="headerlink" title="网络设置"></a><strong>网络设置</strong></h3><ol><li>创建<code>/etc/hostname</code>文件设置主机名，假设为<code>myhostname</code></li><li>配置<code>/etc/hosts</code>文件，将以下内容添加进去：</li></ol><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">127.0.0.1 localhost::1 localhost<br>127.0.1.1 myhostname.localdomain myhostname<br></code></pre></td></tr></table></figure><h3 id="设置root密码"><a href="#设置root密码" class="headerlink" title="设置root密码"></a><strong>设置root密码</strong></h3><p>使用<code>passwd</code>命令设置root密码即可。</p><h3 id="安装及配置引导程序"><a href="#安装及配置引导程序" class="headerlink" title="安装及配置引导程序"></a><strong>安装及配置引导程序</strong></h3><blockquote><p>安装引导程序之后才能进入系统</p></blockquote><p>我用的引导程序是<a href="https://link.zhihu.com/?target=https%3A//wiki.archlinux.org/index.php/GRUB">GRUB</a>，首先安装必要的软件包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pacman -S grub efibootmgr intel-ucode os-prober # AMD请装amd-ucode<br></code></pre></td></tr></table></figure><p>这里详细介绍一下UEFI系统如何安装配置GRUB：</p><ol><li>首先使用以下命令安装到系统：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir /boot/grub<br>grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=ArchLinux<br>grub-mkconfig &gt; /boot/grub/grub.cfg<br></code></pre></td></tr></table></figure><p>关于在BIOS中找不到Grub引导，可以参考<a href="https://andy9999678.me/blog/?p=91">手动添加引导</a>、<a href="https://jasonyychiu.blogspot.com/2019/10/uefi-shell-how-to-change-font-size-in.html">改变UEFI Shell中的中的字体大小</a>，使用安装镜像中的UEFI Shell手动添加EFI</p><h3 id="安装wifi网络管理工具"><a href="#安装wifi网络管理工具" class="headerlink" title="安装wifi网络管理工具"></a><strong>安装wifi网络管理工具</strong></h3><p>为你的系统安装网络工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pacman -S wpa_supplicant dhcpcd<br></code></pre></td></tr></table></figure><h4 id="注意：进入你自己的系统后，无线设备名称会发生改变"><a href="#注意：进入你自己的系统后，无线设备名称会发生改变" class="headerlink" title="注意：进入你自己的系统后，无线设备名称会发生改变"></a>注意：进入你自己的系统后，无线设备名称会发生改变</h4><h2 id="reboot"><a href="#reboot" class="headerlink" title="reboot"></a>reboot</h2><ol><li>输入<code>exit</code>或按<code>Ctrl+d</code>退出<code>chroot</code>环境</li><li>用<code>umount -R /mnt</code>手动卸载被挂载的分区</li><li>执行<code>reboot</code>重启系统</li><li>拔掉安装盘</li></ol><h2 id="再次配置"><a href="#再次配置" class="headerlink" title="再次配置"></a>再次配置</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">login:</span> root <span class="hljs-meta">#输入root登入root用户</span><br></code></pre></td></tr></table></figure><p>参照<strong><a href="">联网</a></strong>，配置好网络连接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">pacman -Syyu<br>pacman -S base-devel<br></code></pre></td></tr></table></figure><p>添加个人用户并配置密码</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">user add -m -G wheel your_username <span class="hljs-comment">#将your_username改成你自己的用户名</span><br>passwd your_username<br></code></pre></td></tr></table></figure><p>使用<code>visudo</code>命令，修改用户组权限，找到<code>%wheel</code>取消其注释，</p><p><code>exit</code>退出root,登陆你的个人用户</p><h3 id="添加archlinuxcn源"><a href="#添加archlinuxcn源" class="headerlink" title="添加archlinuxcn源"></a>添加archlinuxcn源</h3><p>编辑文件/etc/pacman.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo vim /etc/pacman.conf<br></code></pre></td></tr></table></figure><p>在最后一行加入</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[archlinuxcn]</span><br><span class="hljs-attr">Server</span> = https://mirrors.ustc.edu.cn/archlinuxcn/<span class="hljs-variable">$arch</span><br></code></pre></td></tr></table></figure><h3 id="添加PGP密钥"><a href="#添加PGP密钥" class="headerlink" title="添加PGP密钥"></a>添加PGP密钥</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -S archlinuxcn-keyring<br></code></pre></td></tr></table></figure><h3 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -Syyu<br></code></pre></td></tr></table></figure><h2 id="图形化界面"><a href="#图形化界面" class="headerlink" title="图形化界面"></a>图形化界面</h2><p>安装kde</p><h3 id="安装显示服务器"><a href="#安装显示服务器" class="headerlink" title="安装显示服务器"></a><strong>安装显示服务器</strong></h3><p>使用下面的命令安装开源的xorg</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -S xorg xorg-server wayland<br></code></pre></td></tr></table></figure><p>[2023-11]：建议额外安装wayland，</p><h3 id="安装显卡驱动-核显不用安装"><a href="#安装显卡驱动-核显不用安装" class="headerlink" title="安装显卡驱动(核显不用安装)"></a>安装显卡驱动(核显不用安装)</h3><p>根据自己的显卡配置来选择安装即可。</p><p>对于intel显卡，我安装的是官方的<code>xf86-video-intel</code>驱动：(没有特殊需求可以不安装)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -S xf86-video-intel<br></code></pre></td></tr></table></figure><p>对于NVIDIA显卡，安装开源驱动<code>nouveau</code>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -S mesa xf86-video-nouveau<br></code></pre></td></tr></table></figure><h3 id="安装登录管理器"><a href="#安装登录管理器" class="headerlink" title="安装登录管理器"></a>安装登录管理器</h3><p>推荐使用SDDM</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -S sddm sddm-kcm<br>systemctl enable sddm<br></code></pre></td></tr></table></figure><h3 id="安装桌面环境"><a href="#安装桌面环境" class="headerlink" title="安装桌面环境"></a>安装桌面环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -S plasma plasma-wayland-session konsole dolphin ark<br></code></pre></td></tr></table></figure><p>终端模拟器<code>konsole</code>，资源管理器<code>dolphin</code>，图形化解压缩软件<code>ark</code></p><h3 id="声音管理器"><a href="#声音管理器" class="headerlink" title="声音管理器"></a>声音管理器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -S alsa-utils pulseaudio pulseaudio-alsa<br></code></pre></td></tr></table></figure><h3 id="蓝牙"><a href="#蓝牙" class="headerlink" title="蓝牙"></a>蓝牙</h3><p>用不到的话建议不装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -S bluez bluez-utils bluez-firmware<br></code></pre></td></tr></table></figure><p>启动蓝牙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable bluetooth<br>systemctl start bluetooth<br></code></pre></td></tr></table></figure><h3 id="安装Aur助手"><a href="#安装Aur助手" class="headerlink" title="安装Aur助手"></a>安装Aur助手</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -S yay<br></code></pre></td></tr></table></figure><p>之后可以用<code>yay</code>来替代<code>sudo pacman</code></p><h3 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">reboot<br></code></pre></td></tr></table></figure><p>之后尽情配置美化你的arch吧</p>]]></content>
    
    
    
    <tags>
      
      <tag>archlinux</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
